"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[476],{5890:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>d});var a=n(74848),i=n(28453);const r={title:"TD5 - Hachage et tableaux associatifs"},l=void 0,t={id:"TDs/S2/hashAndAssociativeTables",title:"TD5 - Hachage et tableaux associatifs",description:"Dans ce TD nous allons mettre en pratique les notions vues en cours sur les tables de hachage et les tables associatives.",source:"@site/content/TDs/S2/05_hashAndAssociativeTables.md",sourceDirName:"TDs/S2",slug:"/TDs/S2/hashAndAssociativeTables",permalink:"/Learn--cpp_programming/TDs/S2/hashAndAssociativeTables",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"TD5 - Hachage et tableaux associatifs"},sidebar:"TDs",previous:{title:"TD4 - D\xe9duction de type et biblioth\xe8que standard",permalink:"/Learn--cpp_programming/TDs/S2/AutoAndAlgorithm"},next:{title:"TD6 - Arbres binaires",permalink:"/Learn--cpp_programming/TDs/S2/binaryTree"}},c={},d=[{value:"Exercice 1 (fonction de hachage)",id:"exercice-1-fonction-de-hachage",level:2},{value:"Exercice 2 (Analyse du nombre d&#39;insectes)",id:"exercice-2-analyse-du-nombre-dinsectes",level:2},{value:"Exercice 3 (hash sur une structure)",id:"exercice-3-hash-sur-une-structure",level:2}];function o(e){const s={a:"a",admonition:"admonition",annotation:"annotation",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",math:"math",mdxAdmonitionTitle:"mdxAdmonitionTitle",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",mspace:"mspace",msup:"msup",mtext:"mtext",munderover:"munderover",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"Dans ce TD nous allons mettre en pratique les notions vues en cours sur les tables de hachage et les tables associatives."}),"\n",(0,a.jsx)(s.h2,{id:"exercice-1-fonction-de-hachage",children:"Exercice 1 (fonction de hachage)"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\xc9crire une fonction de hachage qui prend en param\xe8tre une cha\xeene de caract\xe8res, fait la somme des valeurs ASCII des caract\xe8res et renvoie un entier compris entre 0 et un maximum donn\xe9 nomm\xe9 ",(0,a.jsx)(s.code,{children:"max"})," (le type de retour du hash doit \xeatre ",(0,a.jsx)(s.code,{children:"size_t"}),")."]}),"\n"]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["Nous utiliserons une simple somme des codes ASCII des caract\xe8res suivie d'un modulo pour obtenir un entier compris entre 0 et ",(0,a.jsx)(s.code,{children:"max"}),"."]}),"\n"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"size_t folding_string_hash(std::string const& s, size_t max);\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Ce que nous venons de faire s'appel la technique dite de ",(0,a.jsx)(s.strong,{children:"folding"})," (pliage en fran\xe7ais). Cela consiste \xe0 d\xe9couper notre donn\xe9e en plusieurs parties, calculer une valeur(hash) pour chacune de ces parties, sommer ces valeurs et enfin appliquer un modulo pour obtenir un entier compris entre 0 et ",(0,a.jsx)(s.code,{children:"max"}),".  Ici on traite une cha\xeene de caract\xe8re, on va donc faire la somme des valeurs de hachage de chaque caract\xe8re."]}),"\n",(0,a.jsx)(s.admonition,{type:"info",children:(0,a.jsxs)(s.p,{children:["On veux se ramener \xe0 un entier compris entre 0 et ",(0,a.jsx)(s.code,{children:"max"}),' car cette valeur hach\xe9e sert g\xe9n\xe9ralement d\'index dans un tableau (table de hachage). Hors on souhaite un tableau de taille "raisonnable" en m\xe9moire, donc on limite la taille de ce tableau \xe0 ',(0,a.jsx)(s.code,{children:"max"}),".\nLe choix de ",(0,a.jsx)(s.code,{children:"max"})," d\xe9pend du contexte d'utilisation de la table de hachage, g\xe9n\xe9ralement on choisit une valeur qui est une puissance de 2 (par exemple 1024, 2048, 4096, etc.)."]})}),"\n",(0,a.jsxs)(s.ol,{start:"2",children:["\n",(0,a.jsx)(s.li,{children:'\xc9crire une nouvelle fonction de hachage sur une cha\xeene de caract\xe8res pour laquelle l\'ordre des caract\xe8res a de l\'importance. Par exemple, les cha\xeenes de caract\xe8res "abc" et "cba" ne doivent pas avoir la m\xeame valeur hach\xe9e. Ce qui est le cas avec la fonction de hachage pr\xe9c\xe9dente.'}),"\n"]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"Utiliser par exemple la somme des codes ASCII des caract\xe8res multipli\xe9e par leur position dans la cha\xeene de caract\xe8res."}),"\n"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"size_t folding_string_ordered_hash(std::string const& s, size_t max);\n"})}),"\n",(0,a.jsxs)(s.ol,{start:"3",children:["\n",(0,a.jsxs)(s.li,{children:["\xc9crire une fonction de hachage sur une cha\xeene de caract\xe8res utilisant la technique de ",(0,a.jsx)(s.strong,{children:"polynomial rolling hash"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"Voila le prototype de la fonction \xe0 \xe9crire:"}),"\n"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"size_t polynomial_rolling_hash(const std::string& s, size_t p, size_t m);\n"})}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["Nous allons utiliser la technique dite de ",(0,a.jsx)(s.strong,{children:"polynomial rolling hash"}),". Cette technique consiste \xe0 calculer le hash d'une cha\xeene de caract\xe8res en incorporant la position d'une mani\xe8re plus complexe pour \xe9viter les collisions. On va donc multiplier la valeur de chaque caract\xe8re par une puissance de ",(0,a.jsx)(s.code,{children:"p"})," qui d\xe9pend de la position du caract\xe8re dans la cha\xeene de caract\xe8res.\nPour cela, nous allons utiliser la formule suivante:"]}),"\n",(0,a.jsx)(s.span,{className:"katex-display",children:(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mtext,{children:"hash"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"s"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsxs)(s.munderover,{children:[(0,a.jsx)(s.mo,{children:"\u2211"}),(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"i"}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsx)(s.mn,{children:"0"})]}),(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mn,{children:"1"})]})]}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"s"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"["}),(0,a.jsx)(s.mi,{children:"i"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"]"}),(0,a.jsx)(s.mo,{children:"\xd7"}),(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsx)(s.mi,{children:"i"})]}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"}),(0,a.jsx)(s.mspace,{}),(0,a.jsx)(s.mspace,{width:"1em"}),(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{mathvariant:"normal",children:"m"}),(0,a.jsx)(s.mi,{mathvariant:"normal",children:"o"}),(0,a.jsx)(s.mi,{mathvariant:"normal",children:"d"})]}),(0,a.jsx)(s.mtext,{children:"\u2009"}),(0,a.jsx)(s.mtext,{children:"\u2009"}),(0,a.jsx)(s.mi,{children:"m"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\text{hash}(s) = \\sum_{i=0}^{n-1} ((s[i] \\times p^i) \\mod m)"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord text",children:(0,a.jsx)(s.span,{className:"mord",children:"hash"})}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,a.jsx)(s.span,{className:"mclose",children:")"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"3.0788em",verticalAlign:"-1.2777em"}}),(0,a.jsx)(s.span,{className:"mop op-limits",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsxs)(s.span,{className:"vlist",style:{height:"1.8011em"},children:[(0,a.jsxs)(s.span,{style:{top:"-1.8723em",marginLeft:"0em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3.05em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsxs)(s.span,{className:"mord mtight",children:[(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,a.jsx)(s.span,{className:"mrel mtight",children:"="}),(0,a.jsx)(s.span,{className:"mord mtight",children:"0"})]})})]}),(0,a.jsxs)(s.span,{style:{top:"-3.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3.05em"}}),(0,a.jsx)(s.span,{children:(0,a.jsx)(s.span,{className:"mop op-symbol large-op",children:"\u2211"})})]}),(0,a.jsxs)(s.span,{style:{top:"-4.3em",marginLeft:"0em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3.05em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsxs)(s.span,{className:"mord mtight",children:[(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"}),(0,a.jsx)(s.span,{className:"mbin mtight",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mord mtight",children:"1"})]})})]})]}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"1.2777em"},children:(0,a.jsx)(s.span,{})})})]})}),(0,a.jsx)(s.span,{className:"mopen",children:"(("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,a.jsx)(s.span,{className:"mopen",children:"["}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(s.span,{className:"mclose",children:"]"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\xd7"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1.1247em",verticalAlign:"-0.25em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8747em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.113em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"})})]})})})})})]}),(0,a.jsx)(s.span,{className:"mclose",children:")"}),(0,a.jsx)(s.span,{className:"mspace allowbreak"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"1em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord",children:(0,a.jsx)(s.span,{className:"mord",children:(0,a.jsx)(s.span,{className:"mord mathrm",children:"mod"})})}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]})]})]})}),"\n",(0,a.jsx)(s.p,{children:"Avec:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"s"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"s"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"s"})]})})]})," la cha\xeene de caract\xe8res"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"n"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," la taille de la cha\xeene de caract\xe8res"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"s"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"["}),(0,a.jsx)(s.mi,{children:"i"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"s[i]"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,a.jsx)(s.span,{className:"mopen",children:"["}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," le code ASCII du caract\xe8re \xe0 l'index ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"i"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]})," dans la cha\xeene de caract\xe8res"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"p"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"p"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"})]})})]})," un nombre (g\xe9n\xe9ralement un nombre premier)"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"m"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"m"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"m"})]})})]})," un nombre (g\xe9n\xe9ralement une puissance de 2)"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.admonition,{type:"warning",children:[(0,a.jsxs)(s.p,{children:["On ne veux pas utiliser la fonction ",(0,a.jsx)(s.a,{href:"https://en.cppreference.com/w/c/numeric/math/pow",children:(0,a.jsx)(s.code,{children:"std::pow"})}),' de la biblioth\xe8que standard car elle est "lente" est fonctionne avec des ',(0,a.jsx)(s.strong,{children:"flottants"})," (ce qui nous ferait faire des conversions inutiles)."]}),(0,a.jsxs)(s.p,{children:["De plus on ne veux pas recalculer la puissance de ",(0,a.jsx)(s.code,{children:"p"})," \xe0 chaque it\xe9ration car c'est des calculs inutiles. Admettons qu'il faille ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mn,{children:"1"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n-1"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"})]})]})]})," multiplications pour calculer ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsx)(s.mi,{children:"n"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"p^n"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8588em",verticalAlign:"-0.1944em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.6644em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"})})]})})})})})]})]})})]})," (",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsx)(s.mo,{children:"\xd7"}),(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsx)(s.mo,{children:"\xd7"}),(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsx)(s.mn,{children:"3"})]})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"p \\times p \\times p = p^3"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\xd7"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.7778em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\xd7"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1.0085em",verticalAlign:"-0.1944em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"3"})})]})})})})})]})]})]})]}),") et que l'on recalculait \xe0 chaque fois la puissance. Pour une cha\xeene de taille ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsx)(s.mi,{children:"n"})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," on ferait donc ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{children:"+"}),(0,a.jsx)(s.mn,{children:"2"}),(0,a.jsx)(s.mo,{children:"+"}),(0,a.jsx)(s.mo,{children:"\u2026"}),(0,a.jsx)(s.mo,{children:"+"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mn,{children:"2"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"}),(0,a.jsx)(s.mo,{children:"+"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 + 2 + \\ldots + (n-2) + (n-1)"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"+"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(s.span,{className:"mord",children:"2"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"+"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(s.span,{className:"minner",children:"\u2026"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"+"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord",children:"2"}),(0,a.jsx)(s.span,{className:"mclose",children:")"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"+"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mclose",children:")"})]})]})]})," multiplications. On peut simplifier cette somme en ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"("}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{stretchy:"false",children:")"}),(0,a.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,a.jsx)(s.mn,{children:"2"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n(n-1)/2"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mopen",children:"("}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mclose",children:")"}),(0,a.jsx)(s.span,{className:"mord",children:"/2"})]})]})]})," ce qui est de l'ordre de ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mn,{children:"2"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n^2"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})})]})," multiplications. On veut \xe9viter \xe7a."]}),(0,a.jsxs)(s.p,{children:["On va donc nous m\xeame faire les multiplications. Pour calculer ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsx)(s.mi,{children:"i"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"p^i"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1.0191em",verticalAlign:"-0.1944em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8247em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"})})]})})})})})]})]})})]})," on peut simplement multiplier par ",(0,a.jsx)(s.code,{children:"p"})," le r\xe9sultat de ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"p"}),(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"i"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mn,{children:"1"})]})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"p^{i-1}"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1.0191em",verticalAlign:"-0.1944em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8247em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsxs)(s.span,{className:"mord mtight",children:[(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"}),(0,a.jsx)(s.span,{className:"mbin mtight",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mord mtight",children:"1"})]})})]})})})})})]})]})})]})," c'est \xe0 dire la valeur de la puissance \xe0 l'it\xe9ration pr\xe9c\xe9dente.\nOn va donc utiliser une variable ",(0,a.jsx)(s.code,{children:"power"})," (initialis\xe9e \xe0 1 au d\xe9but) et multiplier cette variable par ",(0,a.jsx)(s.code,{children:"p"})," \xe0 chaque it\xe9ration pour obtenir les puissances de ",(0,a.jsx)(s.code,{children:"p"}),"."]})]}),"\n",(0,a.jsxs)(s.admonition,{type:"tip",children:[(0,a.jsxs)(s.mdxAdmonitionTitle,{children:["choix de ",(0,a.jsx)(s.code,{children:"p"})," et ",(0,a.jsx)(s.code,{children:"m"})]}),(0,a.jsxs)(s.p,{children:["Le choix de ",(0,a.jsx)(s.code,{children:"p"})," et ",(0,a.jsx)(s.code,{children:"m"})," va influencer la qualit\xe9 (collision) et les performances de notre fonction de hachage. Sans rentrer dans les d\xe9tails, on choisit g\xe9n\xe9ralement ",(0,a.jsx)(s.code,{children:"p"})," un ",(0,a.jsx)(s.strong,{children:"nombre premier"})," et ",(0,a.jsx)(s.code,{children:"m"})," un nombre suffisamment grand pour \xe9viter les collisions tout en restant petit pour rester performant et \xe9viter des erreur num\xe9riques. Par exemple, on peut choisir ",(0,a.jsx)(s.code,{children:"p"})," = ",(0,a.jsx)(s.strong,{children:"31"})," et ",(0,a.jsx)(s.code,{children:"m"})," = ",(0,a.jsx)(s.strong,{children:"10^9 + 9"})," (que l'on peut noter ",(0,a.jsx)(s.code,{children:"1e9 + 9"})," en C++ ou tout simplement ",(0,a.jsx)(s.code,{children:"1000000009"}),")."]})]}),"\n",(0,a.jsx)(s.h2,{id:"exercice-2-analyse-du-nombre-dinsectes",children:"Exercice 2 (Analyse du nombre d'insectes)"}),"\n",(0,a.jsxs)(s.p,{children:["L'id\xe9e de cet exercice est d'utiliser une ",(0,a.jsx)(s.a,{href:"/Lessons/S2/HashAndAssociativeTables/#tableau-associatif",children:"table associative"})," pour r\xe9soudre un probl\xe8me."]}),"\n",(0,a.jsxs)(s.p,{children:["Vous \xeates un entomologiste qui a pour mission de ",(0,a.jsx)(s.strong,{children:"recenser"})," les insectes dans un jardin afin de v\xe9rifier la biodiversit\xe9 de ce jardin et confirmer vos hypoth\xe8ses sur la pr\xe9sence de certaines esp\xe8ces (probabilit\xe9 de pr\xe9sence de certaines esp\xe8ces, etc.)."]}),"\n",(0,a.jsxs)(s.p,{children:["Vous disposez d'une liste d'insectes que vous pouvez rencontrer dans ce jardin (sous forme d'",(0,a.jsx)(s.strong,{children:"\xe9num\xe9ration"}),"):"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"enum class Insect {\n    ClassicBee,\n    Ladybug,\n    Butterfly,\n    Dragonfly,\n    Ant,\n    Grasshopper,\n    Beetle,\n    Wasp,\n    Caterpillar,\n    Spider,\n    GuimielBee\n};\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Je vous fournis \xe9galement une liste des valeurs de l'\xe9num\xe9ration ",(0,a.jsx)(s.code,{children:"Insect"})," sous forme de vecteur (pour pouvoir it\xe9rer sur les valeurs de l'\xe9num\xe9ration et \xe9viter de faire des ",(0,a.jsx)(s.code,{children:"static_cast"})," pour obtenir les valeurs de l'\xe9num\xe9ration \xe0 partir d'un entier (index) ou encore avoir le nombre d'\xe9l\xe9ments de l'\xe9num\xe9ration). Rappels sur les cast avec enum ",(0,a.jsx)(s.a,{href:"/Lessons/S1/Variables/#cast-et-enum",children:"ici"}),"."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"#include <vector>\nconst std::vector<Insect> insect_values {\n    Insect::ClassicBee,\n    Insect::Ladybug,\n    Insect::Butterfly,\n    Insect::Dragonfly,\n    Insect::Ant,\n    Insect::Grasshopper,\n    Insect::Beetle,\n    Insect::Wasp,\n    Insect::Caterpillar,\n    Insect::Spider,\n    Insect::GuimielBee\n};\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Ainsi qu'un tableau associatif qui permet de convertir une valeur de l'\xe9num\xe9ration ",(0,a.jsx)(s.code,{children:"Insect"})," en une cha\xeene de caract\xe8res (pour pouvoir afficher le nom de l'insecte):"]}),"\n",(0,a.jsx)(s.admonition,{type:"info",children:(0,a.jsxs)(s.p,{children:["Il n'existe pas de fonction dans la biblioth\xe8que standard C++ pour obtenir le nom d'une valeur d'une \xe9num\xe9ration. L'astuce est donc de cr\xe9er un tableau associatif pour faire cette correspondance. Il existe des biblioth\xe8ques comme ",(0,a.jsx)(s.a,{href:"https://github.com/Neargye/magic_enum",children:"Magic Enum"})," qui permettent de manipuler plus facilement les \xe9num\xe9rations mais nous n'utiliserons pas de biblioth\xe8que dans cet exercice."]})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:'#include <unordered_map>\n#include <string>\n\nconst std::unordered_map<Insect, std::string> insect_to_string = {\n    {Insect::ClassicBee, "ClassicBee"},\n    {Insect::Ladybug, "Ladybug"},\n    {Insect::Butterfly, "Butterfly"},\n    {Insect::Dragonfly, "Dragonfly"},\n    {Insect::Ant, "Ant"},\n    {Insect::Grasshopper, "Grasshopper"},\n    {Insect::Beetle, "Beetle"},\n    {Insect::Wasp, "Wasp"},\n    {Insect::Caterpillar, "Caterpillar"},\n    {Insect::Spider, "Spider"},\n    {Insect::GuimielBee, "GuimielBee"}\n};\n'})}),"\n",(0,a.jsxs)(s.p,{children:["Enfin, vous disposez d'une liste de comptage d'insectes attendus pour un \xe9chantillon de ",(0,a.jsx)(s.strong,{children:"1000"})," insectes (obtenue en faisant la moyenne des observations de plusieurs entomologistes):\nCette liste se pr\xe9sente sous forme d'un vecteur avec les nombres d'individus attendus pour chaque esp\xe8ce d'insecte (dans le m\xeame ordre que l'\xe9num\xe9ration ",(0,a.jsx)(s.code,{children:"Insect"}),"):"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"#include <vector>\nconst std::vector<int> expected_insect_counts {\n    75, // ClassicBee\n    50, // Ladybug\n    100, // Butterfly\n    20, // Dragonfly\n    400, // Ant\n    150, // Grasshopper\n    60, // Beetle\n    10, // Wasp\n    40, // Caterpillar\n    90, // Spider \n    5, // GuimielBee\n};\n"})}),"\n",(0,a.jsx)(s.p,{children:"Vous avez un grand nombre d'insectes \xe0 recenser et vous avez besoin d'une m\xe9thode pour compter le nombre d'apparitions de chaque insecte."}),"\n",(0,a.jsxs)(s.p,{children:["Le plus simple pour vous est juste de ",(0,a.jsx)(s.strong,{children:"noter au fur et \xe0 mesure"}),' vos observations (esp\xe8ce et nombre d\'individus observ\xe9s) et de faire le compte \xe0 la fin. (par exemple, vous notez "2 abeilles" lorsque vous voyez 2 abeilles et "1 coccinelle" lorsque vous voyez une coccinelle).']}),"\n",(0,a.jsx)(s.p,{children:"Voil\xe0 une fonction qui g\xe9n\xe8re une liste d'observations al\xe9atoires pour simuler vos observations:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"#include <functional>\n#include <random>\n#include <vector>\n#include <algorithm>\n#include <iterator>\n\nstd::vector<std::pair<Insect, int>> get_insect_observations(\n    const size_t number_of_observations,\n    std::vector<float> const& insect_probabilities,\n    const unsigned int seed = std::random_device{}()) {\n    // Create a random engine with a given seed\n    std::default_random_engine random_engine(seed);\n\n    auto randInsectIndex { std::bind(std::discrete_distribution<size_t>{insect_probabilities.begin(), insect_probabilities.end()}, random_engine) };\n    \n    std::vector<std::pair<Insect, int>> observations {};\n    observations.reserve(number_of_observations);\n\n    for(size_t i {0}; i < number_of_observations; ++i) {\n        size_t const random_insect_index { randInsectIndex() };\n        Insect const random_insect { insect_values[random_insect_index] };\n        \n        //If we have already seen the same insect, increment the count on the last observation\n        auto& previous_observation { observations.back() };\n        if(previous_observation.first == random_insect) {\n            previous_observation.second++;\n            i -= 1;\n        } else {\n            observations.push_back({random_insect, 1});\n        }\n    }\n\n    return observations;\n}\n"})}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Cr\xe9er une fonction ",(0,a.jsx)(s.code,{children:"std::vector<float> probabilities_from_count(std::vector<int> const& counts)"})," qui prend en param\xe8tre un vecteur de comptages et retourne un vecteur de probabilit\xe9s \xe0 partir de ces comptages. (on divise chaque comptage par la somme de tous les comptages pour obtenir une probabilit\xe9 normalis\xe9e)."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Utiliser la fonction ",(0,a.jsx)(s.code,{children:"get_insect_observations"})," pour g\xe9n\xe9rer une liste suffisamment grande d'observations (par exemple ",(0,a.jsx)(s.strong,{children:"10000"})," observations) puis utiliser une table de hachage ",(0,a.jsx)(s.code,{children:"std::unordered_map"})," pour compter le nombre d'apparitions de chaque insecte dans les observations pr\xe9c\xe9demment g\xe9n\xe9r\xe9es et ",(0,a.jsx)(s.strong,{children:"afficher le r\xe9sultat"})," (le nombre d'individus observ\xe9s pour chaque insecte)."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsxs)(s.p,{children:["On utilisera la valeur de l'\xe9num\xe9ration ",(0,a.jsx)(s.code,{children:"Insect"})," comme ",(0,a.jsx)(s.strong,{children:"cl\xe9"})," dans la table de hachage et le nombre d'individus observ\xe9s (initialis\xe9 \xe0 0) comme ",(0,a.jsx)(s.strong,{children:"valeur"})," associ\xe9e \xe0 cette cl\xe9 (",(0,a.jsx)(s.code,{children:"std::unordered_map<Insect, int>"}),")."]})}),"\n",(0,a.jsx)(s.admonition,{type:"info",children:(0,a.jsxs)(s.p,{children:["Le param\xe8tre ",(0,a.jsx)(s.code,{children:"seed"})," de la fonction ",(0,a.jsx)(s.code,{children:"get_insect_observations"})," permet de fixer la graine du g\xe9n\xe9rateur de nombres al\xe9atoires. Cela permet de reproduire les m\xeames observations \xe0 chaque ex\xe9cution du programme. Si vous ne sp\xe9cifiez pas de graine, le g\xe9n\xe9rateur de nombres al\xe9atoires utilisera une graine al\xe9atoire \xe0 chaque ex\xe9cution du programme sinon vous pouvez le fixer \xe0 une valeur de votre choix pour obtenir les m\xeames observations \xe0 chaque ex\xe9cution."]})}),"\n",(0,a.jsxs)(s.ol,{start:"3",children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Utiliser de nouveau la fonction ",(0,a.jsx)(s.code,{children:"probabilities_from_count"})," pour obtenir les probabilit\xe9s des insectes observ\xe9s. Il faudra au pr\xe9alable convertir le r\xe9sultat de la table de hachage en un vecteur de comptage pour pouvoir utiliser la fonction ",(0,a.jsx)(s.code,{children:"probabilities_from_count"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Afficher"})," et ",(0,a.jsx)(s.strong,{children:"comparer"})," les probabilit\xe9s des insectes observ\xe9s avec les probabilit\xe9s initiales. Si la diff\xe9rence entre les probabilit\xe9s observ\xe9es et les probabilit\xe9s initiales est trop grande, indiquer que les observations ne sont pas conformes aux probabilit\xe9s initiales. On pourra se fixer un seuil de 1% (0.01) pour consid\xe9rer que les observations sont conformes."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"exemple de pr\xe9sentation des r\xe9sultats:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"Probabilities of observed insects vs expected probabilities\nClassicBee : 0.076 vs 0.075 OK\nLadybug : 0.048 vs 0.050 OK\nButterfly : 0.100 vs 0.100 OK\nDragonfly : 0.035 vs 0.020 BAD\n...\n"})}),"\n",(0,a.jsx)(s.admonition,{type:"info",children:(0,a.jsx)(s.p,{children:"Avec un grand nombre d'observations, on s'attend \xe0 ce que les probabilit\xe9s observ\xe9es se rapprochent des probabilit\xe9s initiales. C'est le principe des lois des grands nombres. Plus on a d'observations, plus les probabilit\xe9s observ\xe9es se rapprocheront des probabilit\xe9s initiales. Avec 10 000 vous devriez \xeatre sous le seuil de 1% pour chaque insecte (OK)."})}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsxs)(s.p,{children:["Vous pouvez utiliser l'include ",(0,a.jsx)(s.code,{children:"<iomanip>"})," pour formater l'affichage des nombres \xe0 virgule flottante.\nAjouter ",(0,a.jsx)(s.code,{children:"std::cout << std::fixed << std::setprecision(3);"})," avant d'afficher les nombres pour afficher les nombres avec 3 chiffres apr\xe8s la virgule."]})}),"\n",(0,a.jsx)(s.h2,{id:"exercice-3-hash-sur-une-structure",children:"Exercice 3 (hash sur une structure)"}),"\n",(0,a.jsx)(s.p,{children:"Donnons nous les enums et structures suivantes:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"enum class CardKind {\n    Heart,\n    Diamond,\n    Club,\n    Spade,\n};\n\nenum class CardValue {\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    Ten,\n    Jack,\n    Queen,\n    King,\n    Ace,\n};\n\nstruct Card {\n    CardKind kind;\n    CardValue value;\n};\n"})}),"\n",(0,a.jsxs)(s.p,{children:["L'id\xe9e de cet exercice est de cr\xe9er une fonction de hachage pour la structure ",(0,a.jsx)(s.code,{children:"Card"})," pour que l'on puisse utiliser cette structure comme cl\xe9 dans une table de hachage."]}),"\n",(0,a.jsx)(s.p,{children:"la biblioth\xe8que standard C++ fournit une fonction de hachage pour les types de base (entiers, flottants, etc.) et les cha\xeenes de caract\xe8res. Mais elle ne fournit pas de fonction de hachage pour nos structures."}),"\n",(0,a.jsx)(s.p,{children:"De la m\xeame fa\xe7on que l'on a surcharg\xe9 les op\xe9rateurs pour nos structures, on va pouvoir surcharger la fonction de hachage de notre structure."}),"\n",(0,a.jsxs)(s.p,{children:["Il faut deux choses pour pouvoir utiliser une ",(0,a.jsx)(s.strong,{children:"structure"})," comme cl\xe9 dans une table de hachage:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["un op\xe9rateur ",(0,a.jsx)(s.code,{children:"=="})," pour comparer deux structures"]}),"\n",(0,a.jsx)(s.li,{children:"une fonction de hachage de cette structure"}),"\n"]}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Surchargez l'op\xe9rateur"})," ",(0,a.jsx)(s.code,{children:"=="})," pour la structure ",(0,a.jsx)(s.code,{children:"Card"})," (deux cartes sont \xe9gales si elles ont la m\xeame valeur et la m\xeame couleur)."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["\xc9crire une ",(0,a.jsx)(s.strong,{children:"m\xe9thode"})," ",(0,a.jsx)(s.code,{children:"hash"})," ",(0,a.jsx)(s.strong,{children:"constante"})," pour la structure ",(0,a.jsx)(s.code,{children:"Card"})," qui retourne un entier."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Vous pouvez utiliser la m\xe9thode de hachage que vous souhaitez et qui vous semble la plus adapt\xe9e. Mais je vous donne un indice pour trouver une fonction de hachage ",(0,a.jsx)(s.strong,{children:"parfaite"})," pour notre structure ",(0,a.jsx)(s.code,{children:"Card"})," dans la question suivante (vous pouvez donc passer \xe0 la question suivante si vous le souhaitez)."]}),"\n",(0,a.jsxs)(s.ol,{start:"3",children:["\n",(0,a.jsxs)(s.li,{children:["Trouvez un moyen simple (\xe0 l'aide d'une multiplication et de static_cast) d'am\xe9liorer la fonction de hachage de notre structure ",(0,a.jsx)(s.code,{children:"Card"})," pour quelle soit ",(0,a.jsx)(s.strong,{children:"parfaite"}),"."]}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsxs)(s.p,{children:["Trouver une bonne fonction de hachage de notre structure ",(0,a.jsx)(s.code,{children:"Card"})," revient \xe0 trouver une fa\xe7on de transformer une carte en un entier unique. Il y a de nombreuses fa\xe7ons de s'y prendre comme on l'a vu pr\xe9c\xe9demment. Mais pour ce cas pr\xe9cis, il existe une fonction de hachage dite ",(0,a.jsx)(s.strong,{children:"parfaite"}),". On peut se rendre compte qu'il y a seulement ",(0,a.jsx)(s.strong,{children:"52"})," cartes diff\xe9rentes. On peut donc utiliser une fonction de hachage qui retourne un entier compris entre 0 et 51 avec un nombre diff\xe9rent pour chaque carte et donc sans collision."]})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsxs)(s.p,{children:["Je vous donne ensuite le code suivant qui permet de faire en sorte que la biblioth\xe8que standard utilise notre m\xe9thode ",(0,a.jsx)(s.code,{children:"hash"})," pour la structure ",(0,a.jsx)(s.code,{children:"Card"}),":"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"namespace std {\n    template<>\n    struct hash<Card> {\n        size_t operator()(Card const& card) const {\n            return card.hash();\n        }\n    };\n}\n"})}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["Je ne vous demande pas de comprendre ce code, il y a des notions plus complexes que vous d\xe9couvrirez l'ann\xe9e prochaine. Gardez simplement en t\xeate que ce code permet de faire en sorte que la biblioth\xe8que standard utilise notre m\xe9thode ",(0,a.jsx)(s.code,{children:"hash"})," pour la structure ",(0,a.jsx)(s.code,{children:"Card"}),". (Notamment les tables associatives ont besoin de \xe7a pour indexer les objects). On aurait pu \xe9crire le contenu de la fonction ",(0,a.jsx)(s.code,{children:"hash"})," directement ici mais je pr\xe9f\xe8re que vous ayez une m\xe9thode ",(0,a.jsx)(s.code,{children:"hash"})," dans la structure ",(0,a.jsx)(s.code,{children:"Card"})," pour que vous puissiez l'utiliser ailleurs (en appelant ",(0,a.jsx)(s.code,{children:"card.hash()"}),")."]}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{type:"warning",children:(0,a.jsxs)(s.p,{children:["\u26a0\ufe0f Votre m\xe9thode ",(0,a.jsx)(s.code,{children:"hash"})," doit \xeatre ",(0,a.jsx)(s.code,{children:"const"})," pour pouvoir \xeatre appel\xe9e dans cette fonction qui est ",(0,a.jsx)(s.code,{children:"const"}),"."]})}),"\n",(0,a.jsx)(s.p,{children:"Je vous donne \xe9galement une fonction qui permet de g\xe9n\xe9rer une liste de cartes al\xe9atoires:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"#include <vector>\nstd::vector<Card> get_cards(size_t const size) {\n    std::vector<Card> cards {};\n    cards.reserve(size);\n    for (size_t i {0}; i < size; ++i) {\n        cards.push_back({static_cast<CardKind>(rand() % 4), static_cast<CardValue>(rand() % 13)});\n    }\n    return cards;\n}\n"})}),"\n",(0,a.jsxs)(s.ol,{start:"4",children:["\n",(0,a.jsxs)(s.li,{children:["Utiliser la fonction ",(0,a.jsx)(s.code,{children:"get_cards"})," pour g\xe9n\xe9rer une liste de ",(0,a.jsx)(s.strong,{children:"100"})," cartes al\xe9atoires. Utiliser une table de hachage ",(0,a.jsx)(s.code,{children:"std::unordered_map"})," pour compter le nombre de fois que chaque carte appara\xeet dans la liste et afficher le r\xe9sultat."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Pour pouvoir afficher, je vous donne la fonction suivante qui permet d'obtenir une repr\xe9sentation sous forme de cha\xeene de caract\xe8res de notre structure ",(0,a.jsx)(s.code,{children:"Card"}),":"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:'std::string card_name(Card const& card) {\n    std::string name {};\n\n    unsigned int card_value {(static_cast<unsigned int>(card.value)+2) % 14};\n\n    if (card_value < 10) {\n        name += \'0\' + card_value;\n    }else if (card_value == 10) {\n        name += "10";\n    }else if (card_value == 11) {\n        name += \'V\';\n    }else if (card_value == 12) {\n        name += \'Q\';\n    }else if (card_value == 13) {\n        name += \'K\';\n    }\n\n    name += " of ";\n\n    if (card.kind == CardKind::Heart) {\n        name += "Heart";\n    }else if (card.kind == CardKind::Diamond) {\n        name += "Diamond";\n    }else if (card.kind == CardKind::Club) {\n        name += "Club";\n    }else if (card.kind == CardKind::Spade) {\n        name += "Spade";\n    }\n    return name;\n}\n'})})]})}function m(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>t});var a=n(96540);const i={},r=a.createContext(i);function l(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);