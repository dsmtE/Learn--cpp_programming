"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[950],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var i=r(96540);const t={},l=i.createContext(t);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(l.Provider,{value:n},e.children)}},60004:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"TDs/S1/MemoryAllocation","title":"TD9 - M\xe9moire","description":"Exercice 1 (Allocation dynamique)","source":"@site/content/TDs/S1/09_MemoryAllocation.md","sourceDirName":"TDs/S1","slug":"/TDs/S1/MemoryAllocation","permalink":"/Learn--cpp_programming/TDs/S1/MemoryAllocation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"title":"TD9 - M\xe9moire"},"sidebar":"TDs","previous":{"title":"TD8 - Headers","permalink":"/Learn--cpp_programming/TDs/S1/headers"},"next":{"title":"TD1 - Op\xe9rateurs","permalink":"/Learn--cpp_programming/TDs/S2/operators"}}');var t=r(74848),l=r(28453);const s={title:"TD9 - M\xe9moire"},o=void 0,c={},a=[{value:"Exercice 1 (Allocation dynamique)",id:"exercice-1-allocation-dynamique",level:2},{value:"Exercice 2",id:"exercice-2",level:2},{value:"Exercice 3 (Split)",id:"exercice-3-split",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"exercice-1-allocation-dynamique",children:"Exercice 1 (Allocation dynamique)"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\xc9crire un programme qui alloue dynamiquement une variable de type ",(0,t.jsx)(n.code,{children:"int"})," avec le mot-cl\xe9 ",(0,t.jsx)(n.code,{children:"new"})," (sans initialisation)."]}),"\n",(0,t.jsx)(n.li,{children:"Demander \xe0 l'utilisateur de saisir une valeur pour cette variable et modifier la valeur de la variable avec cette saisie."}),"\n",(0,t.jsxs)(n.li,{children:["\xc9crire une ",(0,t.jsx)(n.strong,{children:"fonction"})," qui prend en param\xe8tre un pointeur sur un ",(0,t.jsx)(n.code,{children:"int"})," et qui affiche la valeur de la variable point\xe9e."]}),"\n",(0,t.jsx)(n.li,{children:"Afficher la valeur de la variable avec la fonction pr\xe9c\xe9dente."}),"\n",(0,t.jsx)(n.li,{children:"Afficher l'adresse de la variable."}),"\n",(0,t.jsxs)(n.li,{children:["Lib\xe9rer cette variable avec le mot-cl\xe9 ",(0,t.jsx)(n.code,{children:"delete"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"exercice-2",children:"Exercice 2"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\xc9crire un programme qui g\xe9n\xe8re un tableau (",(0,t.jsx)(n.code,{children:"std::vector"}),") de ",(0,t.jsx)(n.code,{children:"100"})," entiers al\xe9atoires compris entre 0 et 100."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Vous pouvez utiliser la fonction ",(0,t.jsx)(n.code,{children:"rand()"})," pour g\xe9n\xe9rer un nombre al\xe9atoire. Je vous renvoie \xe0 l'",(0,t.jsx)(n.a,{href:"/TDs/S1/Arrays/#exercice-1-min--max",children:"Exercice 1"})," du TD5 pour plus d'informations."]})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\xc9crire une fonction qui retourne un pointeur sur le premier \xe9l\xe9ment du tableau qui est sup\xe9rieur \xe0 90, ou ",(0,t.jsx)(n.code,{children:"nullptr"})," si le tableau ne contient pas de tels \xe9l\xe9ments."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\xc9crire une fonction qui prend en param\xe8tre un pointeur sur un emplacement m\xe9moire contigu\xeb d'entiers et sa taille et qui retourne la ",(0,t.jsx)(n.strong,{children:"somme"})," des \xe9l\xe9ments du tableau."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Utiliser les fonctions pr\xe9c\xe9dentes pour afficher la somme des \xe9l\xe9ments du tableau, et le premier \xe9l\xe9ment > 90 (pensez \xe0 g\xe9rer le cas ",(0,t.jsx)(n.code,{children:"nullptr"})," !)."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["On peut r\xe9cup\xe9rer un pointeur sur le premier \xe9l\xe9ment d'un ",(0,t.jsx)(n.code,{children:"std::vector"})," avec la m\xe9thode ",(0,t.jsx)(n.code,{children:"data()"}),".\nSinon il est aussi possible d'utiliser l'op\xe9rateur ",(0,t.jsx)(n.code,{children:"&"})," sur le premier \xe9l\xe9ment du ",(0,t.jsx)(n.code,{children:"std::vector"}),"."]})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Completer la fonction ",(0,t.jsx)(n.code,{children:"sum"})," suivante pour qu'elle retourne un pointeur sur la somme des \xe9l\xe9ments du tableau pass\xe9 en param\xe8tre."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int* sum(std::vector<int> const& v) {\n    int sum {0};\n    // boucle for\n\n    // TODO\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Utiliser la fonction ",(0,t.jsx)(n.code,{children:"sum"})," pour afficher la somme des \xe9l\xe9ments du tableau."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["En fonction du r\xe9sultat obtenu, que pouvez-vous en d\xe9duire sur le fonctionnement de la fonction ",(0,t.jsx)(n.code,{children:"sum"})," ? Si elle ne fonctionne pas, corriger la fonction ",(0,t.jsx)(n.code,{children:"sum"})," pour qu'elle fonctionne correctement."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"exercice-3-split",children:"Exercice 3 (Split)"}),"\n",(0,t.jsxs)(n.p,{children:["Dans cet exercice, on ne doit pas utiliser de ",(0,t.jsx)(n.code,{children:"std::vector"}),"."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Allouer dynamiquement un tableau de ",(0,t.jsx)(n.code,{children:"100"})," flottants al\xe9atoires compris entre 0 et 100 (utiliser l'allocation dynamique pour des ",(0,t.jsx)(n.a,{href:"/Lessons/S1/MemoryAllocation/#tableaux",children:"emplacements m\xe9moire contigu\xebs"}),")."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Vous pouvez utiliser la fonction ",(0,t.jsx)(n.code,{children:"rand()"})," pour g\xe9n\xe9rer un nombre al\xe9atoire.\nPour g\xe9n\xe9rer un nombre flottant al\xe9atoire vous pouvez utiliser la fonction ",(0,t.jsx)(n.code,{children:"rand()"})," et la diviser par ",(0,t.jsx)(n.code,{children:"RAND_MAX"})," (qui est une constante d\xe9finie dans la biblioth\xe8que ",(0,t.jsx)(n.code,{children:"cstdlib"}),") ce qui permet d'obtenir un nombre flottant al\xe9atoire entre 0 et 1.\nIl ne vous reste plus qu'\xe0 multiplier ce nombre par 100 pour obtenir un nombre flottant al\xe9atoire entre 0 et 100."]})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\xc9crire une fonction qui prend en param\xe8tre un tableau de flottants (sous la forme d'un pointeur sur le premier \xe9l\xe9ment du tableau) et sa taille et qui retourne un pointeur sur le plus grand \xe9l\xe9ment du tableau."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["On souhaite cr\xe9er une fonction qui permet de cr\xe9er un nouveau tableau compos\xe9 des \xe9l\xe9ments du tableau pass\xe9 en param\xe8tre qui sont sup\xe9rieurs \xe0 un certain seuil.\n\xc9crire une fonction ",(0,t.jsx)(n.code,{children:"thresholdFilter"})," qui prend en param\xe8tre un tableau de flottants, sa taille, un seuil et une r\xe9f\xe9rence sur un entier qui contiendra la taille du nouveau tableau et qui retourne un pointeur sur le premier \xe9l\xe9ment du nouveau tableau."]}),"\n",(0,t.jsx)(n.p,{children:"Voil\xe0 la signature de la fonction:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"float* thresholdFilter(float const* const array, size_t const size, float const threshold, size_t& new_size);\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Vous pouvez remarquer que j'ai \xe9crit ",(0,t.jsx)(n.code,{children:"float const* const array"})," au lieu de ",(0,t.jsx)(n.code,{children:"float* array"}),". Le premier ",(0,t.jsx)(n.code,{children:"const"})," signifie que l'on ne peut pas modifier les valeurs point\xe9es par le pointeur ",(0,t.jsx)(n.code,{children:"array"})," et le deuxi\xe8me ",(0,t.jsx)(n.code,{children:"const"})," signifie que l'on ne peut pas modifier l'adresse point\xe9e par le pointeur ",(0,t.jsx)(n.code,{children:"array"}),"."]})}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);