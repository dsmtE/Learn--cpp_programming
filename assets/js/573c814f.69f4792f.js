"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[6657],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),d=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(r),m=i,k=c["".concat(u,".").concat(m)]||c[m]||s[m]||a;return r?n.createElement(k,l(l({ref:t},p),{},{components:r})):n.createElement(k,l({ref:t},p))}));function k(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<a;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},388:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const a={},l=void 0,o={unversionedId:"TDs/S2/sorting",id:"TDs/S2/sorting",title:"sorting",description:"L'id\xe9e de ce TD est de mettre en pratique les notions vues en cours sur les algorithmes de tri et de recherche.",source:"@site/content/TDs/S2/02_sorting.md",sourceDirName:"TDs/S2",slug:"/TDs/S2/sorting",permalink:"/Learn--cpp_programming/TDs/S2/sorting",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{}},u={},d=[{value:"Exercice 1",id:"exercice-1",level:2},{value:"Exercice 2 (tri r\xe9cursif)",id:"exercice-2-tri-r\xe9cursif",level:2},{value:"Comparaison des algorithmes de tri",id:"comparaison-des-algorithmes-de-tri",level:2},{value:"biblioth\xe8que standard",id:"biblioth\xe8que-standard",level:3},{value:"Exercice 3 (dichotomie)",id:"exercice-3-dichotomie",level:2}],p={toc:d},c="wrapper";function s(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"L'id\xe9e de ce TD est de mettre en pratique les notions vues en cours sur les algorithmes de tri et de recherche."),(0,i.kt)("h2",{id:"exercice-1"},"Exercice 1"),(0,i.kt)("p",null,"Dans cet exercice, vous devez \xe9crire une fonction qui prend en param\xe8tre un tableau d'entiers (",(0,i.kt)("inlineCode",{parentName:"p"},"std::vector"),") et le trie par ordre croissant."),(0,i.kt)("p",null,"Vous avez le choix entre deux algorithmes de tri:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"tri \xe0 bulle")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"tri par s\xe9lection"))),(0,i.kt)("h2",{id:"exercice-2-tri-r\xe9cursif"},"Exercice 2 (tri r\xe9cursif)"),(0,i.kt)("p",null,"De nouveau, vous devez \xe9crire une fonction qui prend en param\xe8tre un tableau d'entiers (",(0,i.kt)("inlineCode",{parentName:"p"},"std::vector"),") et le trie par ordre croissant."),(0,i.kt)("p",null,"Cette fois-ci, vous devez utiliser un algorithme de tri r\xe9cursif."),(0,i.kt)("p",null,"Vous avez le choix entre deux algorithmes de tri:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"tri fusion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"tri rapide"))),(0,i.kt)("h2",{id:"comparaison-des-algorithmes-de-tri"},"Comparaison des algorithmes de tri"),(0,i.kt)("p",null,"Une fois nos algorithmes de tri impl\xe9ment\xe9s, nous allons les comparer en terme de complexit\xe9 temporelle."),(0,i.kt)("p",null,"Je vous fournis une fonction qui permet de g\xe9n\xe9rer un tableau d'entiers al\xe9atoires."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <vector>\n#include <cstdlib>\n\nstd::vector<int> generateRandomArray(size_t size, int max) {\n    std::vector<int> array;\n    \n    for (size_t i {0}; i < size; i++) {\n        array.push_back(std::rand() % max);\n    }\n\n    return array;\n}\n")),(0,i.kt)("p",null,"Je vous fournis \xe9galement une structure chronom\xe8tre, il suffit de copier le fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"ScopedTimer.hpp")," dans le dossier de votre projet et de l'inclure dans votre fichier source:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "ScopedTimer.hpp"\n')),(0,i.kt)("p",null,"Elle fonctionne de la mani\xe8re suivante:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'{\n    ScopedTimer timer("nom du chronom\xe8tre");\n    // code \xe0 chronom\xe9trer\n}\n')),(0,i.kt)("p",null,"Il affichera le temps \xe9coul\xe9 entre sa cr\xe9ation et sa destruction(c'est \xe0 dire \xe0 la fin du bloc de code, c'est pourquoi il est d\xe9clar\xe9 dans un bloc entre accolades (",(0,i.kt)("strong",{parentName:"p"},"Scope"),"))."),(0,i.kt)("h3",{id:"biblioth\xe8que-standard"},"biblioth\xe8que standard"),(0,i.kt)("p",null,"La ",(0,i.kt)("strong",{parentName:"p"},"biblioth\xe8que standard")," de C++ fournit une fonction de tri ",(0,i.kt)("inlineCode",{parentName:"p"},"std::sort")," qui permet de trier des conteneurs (incluse dans la biblioth\xe8que ",(0,i.kt)("inlineCode",{parentName:"p"},"<algorithm>"),")"),(0,i.kt)("p",null,"Vous pouvez l'utiliser de la mani\xe8re suivante:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector<int> array {1, 2, 3, 4, 5, 6, 7, 8, 9};\nstd::sort(array.begin(), array.end());\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"begin")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"end")," sont des m\xe9thodes de ",(0,i.kt)("inlineCode",{parentName:"p"},"std::vector")," qui permettent de r\xe9cup\xe9rer des ",(0,i.kt)("strong",{parentName:"p"},"it\xe9rateurs")," sur le d\xe9but et la fin du conteneur.\nNous verrons les it\xe9rateurs plus tard dans le cours.")),(0,i.kt)("p",null,"Avec cette fonction, vous pouvez comparer les temps d'ex\xe9cution de vos algorithmes de tri avec celui de la biblioth\xe8que standard."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Que constatez-vous ?"),(0,i.kt)("li",{parentName:"ul"},"Que pouvez-vous en dire ?")),(0,i.kt)("h2",{id:"exercice-3-dichotomie"},"Exercice 3 (dichotomie)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\xc9crire une fonction ",(0,i.kt)("inlineCode",{parentName:"li"},"search")," qui prend en param\xe8tre un tableau d'entiers (",(0,i.kt)("inlineCode",{parentName:"li"},"std::vector"),") tri\xe9 par ordre croissant et une valeur enti\xe8re et retourne l'indice de la valeur dans le tableau. Si la valeur n'est pas pr\xe9sente dans le tableau, la fonction retournera ",(0,i.kt)("inlineCode",{parentName:"li"},"-1"),".")),(0,i.kt)("p",null,"la fonction devra utiliser l'algorithme de recherche ",(0,i.kt)("strong",{parentName:"p"},"dichotomique"),"."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"On utilisera deux indices pour d\xe9finir la partie du tableau \xe0 traiter:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"left")," : indice du premier \xe9l\xe9ment de la partie du tableau \xe0 traiter"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"right")," : indice du dernier \xe9l\xe9ment de la partie du tableau \xe0 traiter")),(0,i.kt)("p",{parentName:"admonition"},"Exemple simple avec le tableau suivant ",(0,i.kt)("inlineCode",{parentName:"p"},"[1, 2, 2, 3, 4, 8, 12]")," (nombre d'\xe9l\xe9ments: 7) et la valeur recherch\xe9e ",(0,i.kt)("inlineCode",{parentName:"p"},"8"),":"),(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"left = 0")," et ",(0,i.kt)("inlineCode",{parentName:"li"},"right = 6")," (indice du premier et dernier \xe9l\xe9ment du tableau)\n",(0,i.kt)("inlineCode",{parentName:"li"},"middle = (left + right) / 2 = (0 + 6) / 2 = 3")," (indice de l'\xe9l\xe9ment au milieu du tableau)\nla valeur au milieu du tableau est ",(0,i.kt)("inlineCode",{parentName:"li"},"3")," qui est inf\xe9rieure \xe0 la valeur recherch\xe9e ",(0,i.kt)("inlineCode",{parentName:"li"},"8"),", on ne garde que la partie droite du tableau.\n",(0,i.kt)("inlineCode",{parentName:"li"},"left")," devient ",(0,i.kt)("inlineCode",{parentName:"li"},"middle + 1 = 3 + 1 = 4")," (indice du premier \xe9l\xe9ment de la partie droite du tableau)"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"left = 4")," et ",(0,i.kt)("inlineCode",{parentName:"li"},"right = 6"),(0,i.kt)("inlineCode",{parentName:"li"},"middle = (left + right) / 2 = (4 + 6) / 2 = 5"),"\nla valeur au milieu du tableau est ",(0,i.kt)("inlineCode",{parentName:"li"},"8")," qui est \xe9gale \xe0 la valeur recherch\xe9e, on retourne l'indice ",(0,i.kt)("inlineCode",{parentName:"li"},"5")," de la valeur dans le tableau."))),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"tester la fonction ",(0,i.kt)("inlineCode",{parentName:"li"},"search")," avec les tableaux suivants et afficher le r\xe9sultat de la recherche:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[1, 2, 2, 3, 4, 8, 12]")," (valeur recherch\xe9e: ",(0,i.kt)("inlineCode",{parentName:"li"},"8"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[1, 2, 3, 3, 6, 14, 12, 15]")," (valeur recherch\xe9e: ",(0,i.kt)("inlineCode",{parentName:"li"},"15"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[2, 2, 3, 4, 5, 8, 12, 15, 16]")," (valeur recherch\xe9e: ",(0,i.kt)("inlineCode",{parentName:"li"},"16"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[5, 6, 7, 8, 9, 10, 11, 12, 13]")," (valeur recherch\xe9e: ",(0,i.kt)("inlineCode",{parentName:"li"},"6"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"[1, 2, 3, 4, 5, 6, 7, 8, 9]")," (valeur recherch\xe9e: ",(0,i.kt)("inlineCode",{parentName:"li"},"10"),")")))))}s.isMDXComponent=!0}}]);