"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[9828],{26908:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=s(85893),r=s(11151);const l={title:"Un peu de logique avec les conditions",tags:["C++"]},t=void 0,d={id:"Lessons/S1/Conditions",title:"Un peu de logique avec les conditions",description:"Le C++ va nous permettre d'exprimer des conditions sur les valeurs de nos variables afin d'ex\xe9cuter des instructions diff\xe9rentes en fonction du r\xe9sultat des conditions.",source:"@site/content/Lessons/S1/03_Conditions.md",sourceDirName:"Lessons/S1",slug:"/Lessons/S1/Conditions",permalink:"/Learn--cpp_programming/Lessons/S1/Conditions",draft:!1,unlisted:!1,tags:[{inline:!0,label:"C++",permalink:"/Learn--cpp_programming/tags/c"}],version:"current",sidebarPosition:3,frontMatter:{title:"Un peu de logique avec les conditions",tags:["C++"]},sidebar:"Lessons",previous:{title:"Un monde de variables",permalink:"/Learn--cpp_programming/Lessons/S1/Variables"},next:{title:"Des boucles pour gagner du temps",permalink:"/Learn--cpp_programming/Lessons/S1/Loops"}},o={},c=[{value:"Les valeurs bool\xe9ennes",id:"les-valeurs-bool\xe9ennes",level:2},{value:"La logique bool\xe9enne",id:"la-logique-bool\xe9enne",level:2},{value:"NOT: La n\xe9gation",id:"not-la-n\xe9gation",level:3},{value:"AND",id:"and",level:3},{value:"OR",id:"or",level:2},{value:"Des structures de contr\xf4le",id:"des-structures-de-contr\xf4le",level:2},{value:"Si",id:"si",level:3},{value:"Sinon",id:"sinon",level:3},{value:"Sinon si",id:"sinon-si",level:3},{value:"Faux-ami",id:"faux-ami",level:2},{value:"Combinaison d&#39;expressions",id:"combinaison-dexpressions",level:2},{value:"Pour aller plus loin",id:"pour-aller-plus-loin",level:3},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Le C++ va nous permettre d'exprimer des ",(0,i.jsx)(n.strong,{children:"conditions"})," sur les valeurs de nos variables afin d'ex\xe9cuter des instructions diff\xe9rentes en fonction du r\xe9sultat des conditions."]}),"\n",(0,i.jsx)(n.h2,{id:"les-valeurs-bool\xe9ennes",children:"Les valeurs bool\xe9ennes"}),"\n",(0,i.jsxs)(n.p,{children:["J'ai omis un type lors du pr\xe9c\xe9dent chapitre, il s'agit du ",(0,i.jsx)(n.strong,{children:"type bool\xe9en"}),", il s'utilise avec le mot cl\xe9 ",(0,i.jsx)(n.strong,{children:"bool"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Ce type peut prendre deux valeurs: soit ",(0,i.jsx)(n.strong,{children:"true"}),", signifiant vrai, soit ",(0,i.jsx)(n.strong,{children:"false"})," qui veut dire faux. C'est donc id\xe9al pour stocker le r\xe9sultat d'une condition."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",metastring:'title="Voici un petit exemple"',children:"int main()\n{\n    bool const condition { true };\n    return 0;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Cela va devenir int\xe9ressant gr\xe2ce \xe0 ce que l'on appelle les ",(0,i.jsx)(n.strong,{children:"op\xe9rateurs de comparaison"}),"."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Op\xe9rateur"}),(0,i.jsx)(n.th,{children:"Signification"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"=="}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"\xc9galit\xe9"}),", compare si deux variables sont ",(0,i.jsx)(n.strong,{children:"\xe9gales"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"!="}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"In\xe9galit\xe9"}),", compare si deux variables sont ",(0,i.jsx)(n.strong,{children:"diff\xe9rentes"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"<"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Strictement inf\xe9rieur"}),", compare si la variable de gauche est ",(0,i.jsx)(n.strong,{children:"strictement inf\xe9rieure"})," \xe0 celle de droite"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"<="}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Inf\xe9rieur ou \xe9gal"}),", compare si la variable de gauche est ",(0,i.jsx)(n.strong,{children:"inf\xe9rieure ou \xe9gale"})," \xe0 celle de droite"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:">"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Strictement sup\xe9rieur"}),", compare si la variable de gauche est ",(0,i.jsx)(n.strong,{children:"strictement sup\xe9rieure"})," \xe0 celle de droite"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:">="}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"Sup\xe9rieur ou \xe9gal"}),", compare si la variable de gauche est ",(0,i.jsx)(n.strong,{children:"sup\xe9rieure ou \xe9gale"})," \xe0 celle de droite"]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Ces op\xe9rateurs vont nous permettre de cr\xe9er des conditions (des valeurs bool\xe9ennes) \xe0 partir de nos autres variables."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\nint main()\n{\n    float const a { 10.0f };\n    float const b { 20.0f };\n\n    std::cout << a << " == " << b << " donne " << (a == b) << std::endl;\n    std::cout << a << " != " << b << " donne " << (a != b) << std::endl;\n    std::cout << a << " < " << b << " donne " << (a < b) << std::endl;\n    std::cout << a << " <= " << b << " donne " << (a <= b) << std::endl;\n\n    // On peut aussi stocker le r\xe9sultat de la condition dans une variable bool\xe9enne\n    float const price { 24.5f };\n    bool const is_too_expensive { price >= 100.f };\n\n    return 0;\n}\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["Par d\xe9faut, ",(0,i.jsx)(n.code,{children:"std::cout"})," affiche 1 pour une condition vraie (true) et 0 pour une condition fausse (false)."]}),(0,i.jsxs)(n.p,{children:['Il est possible de changer ce comportement en ajoutant un "modificateur" sur le stream ',(0,i.jsx)(n.code,{children:"std::cout"}),":"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\nint main()\n{\n    float const a { 10.0f };\n    float const b { 20.0f };\n\n    std::cout << std::boolalpha;\n    std::cout << a << " == " << b << " donne " << (a == b) << std::endl;\n\n    return 0;\n}\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"la-logique-bool\xe9enne",children:"La logique bool\xe9enne"}),"\n",(0,i.jsxs)(n.p,{children:["Maintenant que nous disposons d'un moyen d'obtenir une valeur bool\xe9enne (via les op\xe9rateurs de comparaison) nous allons pouvoir manipuler ces valeurs avec ce que l'on nomme des ",(0,i.jsx)(n.strong,{children:"op\xe9rateurs logiques"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Ces op\xe9rateurs vont permettre de combiner et modifier des valeurs bool\xe9ennes afin d'en obtenir d'autres et faire ce que l'on appelle plus g\xe9n\xe9ralement de l\u2019",(0,i.jsx)(n.strong,{children:"alg\xe8bre bool\xe9enne"}),".\nMais ne vous inqui\xe9tez pas, derri\xe8re ce nom tr\xe8s math\xe9matique se cache des choses tr\xe8s simples."]}),"\n",(0,i.jsx)(n.h3,{id:"not-la-n\xe9gation",children:"NOT: La n\xe9gation"}),"\n",(0,i.jsxs)(n.p,{children:["L'op\xe9rateur ",(0,i.jsx)(n.code,{children:"!"})," (plac\xe9 devant une valeur bool\xe9enne) permet d'exprimer la n\xe9gation d'une condition."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["C'est ici un op\xe9rateur dit ",(0,i.jsx)(n.strong,{children:"unaire"})," (qui s'applique sur une seule valeur) et donne en retour la condition inverse."]})}),"\n",(0,i.jsxs)(n.p,{children:["Voici ce qu\u2019on appelle la ",(0,i.jsx)(n.strong,{children:"table de v\xe9rit\xe9"})," de l\u2019op\xe9rateur ",(0,i.jsx)(n.strong,{children:"NOT"}),", qui formalise les entr\xe9es et les sorties de cet op\xe9rateur."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"A"}),(0,i.jsx)(n.th,{children:"R\xe9sultat"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"false"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"true"})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"float price { 114.2f };\nbool isExpensive { price >= 100.f };\n\nbool isCheap { !isExpensive };\n"})}),"\n",(0,i.jsx)(n.h3,{id:"and",children:"AND"}),"\n",(0,i.jsxs)(n.p,{children:["L'op\xe9rateur ",(0,i.jsx)(n.code,{children:"&&"})," (plac\xe9 entre deux valeurs bool\xe9ennes) permet d'exprimer la validit\xe9 de deux conditions ",(0,i.jsx)(n.strong,{children:"en m\xeame temps"}),".\nOn peut l'interpr\xe9ter en fran\xe7ais par : \"ma condition1 est vraie ",(0,i.jsx)(n.strong,{children:"ET"}),' ma condition2 est aussi vraie".']}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"A"}),(0,i.jsx)(n.th,{children:"B"}),(0,i.jsx)(n.th,{children:"R\xe9sultat"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"true"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"false"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"false"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"false"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"or",children:"OR"}),"\n",(0,i.jsxs)(n.p,{children:["L'op\xe9rateur ",(0,i.jsx)(n.code,{children:"||"})," (plac\xe9 entre deux valeurs bool\xe9ennes) permet d'exprimer si ",(0,i.jsx)(n.strong,{children:"au moins une des deux"})," conditions est ",(0,i.jsx)(n.strong,{children:"vraie"}),".\nOn peut l'interpr\xe9ter en fran\xe7ais par : \"ma condition1 est vraie ",(0,i.jsx)(n.strong,{children:"OU"}),' ma condition2 est vraie".']}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"A"}),(0,i.jsx)(n.th,{children:"B"}),(0,i.jsx)(n.th,{children:"R\xe9sultat"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"true"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"true"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"true"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"false"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["Il est \xe9galement possible d'utiliser les mots-cl\xe9s ",(0,i.jsx)(n.code,{children:"and"}),", ",(0,i.jsx)(n.code,{children:"or"})," et ",(0,i.jsx)(n.code,{children:"not"})," pour remplacer respectivement les op\xe9rateurs ",(0,i.jsx)(n.code,{children:"&&"}),", ",(0,i.jsx)(n.code,{children:"||"})," et ",(0,i.jsx)(n.code,{children:"!"}),"."]}),(0,i.jsx)(n.p,{children:"C'est possible mais tr\xe8s peu r\xe9pandu en C++ c'est pourquoi je ne l'utiliserai pas personnellement mais sachez que \xe7a existe \xe9galement."}),(0,i.jsxs)(n.p,{children:["Avec de vielles versions de Visual Studio il est possible que cette syntaxe ne fonctionne pas et dans ce cas il faut inclure le fichier ",(0,i.jsx)(n.code,{children:"<ciso646>"}),"."]})]}),"\n",(0,i.jsxs)(n.admonition,{type:"danger",children:[(0,i.jsxs)(n.p,{children:["Pour l'op\xe9rateur ",(0,i.jsx)(n.strong,{children:"AND"})," (",(0,i.jsx)(n.code,{children:"&&"}),") on note qu'il y a bien deux fois le symbole ",(0,i.jsx)("kbd",{children:"&"}),". C'est tr\xe8s important car il existe un autre op\xe9rateur (avec un seul ",(0,i.jsx)(n.strong,{children:"&"}),") qui fait tout autre chose.\nJe ne d\xe9taillerai pas dans ce chapitre son utilit\xe9 mais il est important de le souligner car c'est une erreur qui arrive fr\xe9quemment."]}),(0,i.jsxs)(n.p,{children:["De m\xeame pour l'op\xe9rateur ",(0,i.jsx)(n.strong,{children:"OR"})," (",(0,i.jsx)(n.code,{children:"||"}),") diff\xe9rent de ",(0,i.jsx)("kbd",{children:"|"}),"."]})]}),"\n",(0,i.jsx)(n.h2,{id:"des-structures-de-contr\xf4le",children:"Des structures de contr\xf4le"}),"\n",(0,i.jsx)(n.p,{children:"C'est bien beau toutes ces valeurs bool\xe9ennes mais comment on peut s'en servir pour ex\xe9cuter une partie d'un code ou un autre en fonction d'une condition ?"}),"\n",(0,i.jsx)(n.h3,{id:"si",children:"Si"}),"\n",(0,i.jsxs)(n.p,{children:["Notre premi\xe8re structure de contr\xf4le va s'utiliser avec le mot cl\xe9 ",(0,i.jsx)(n.strong,{children:"if"}),".\nDe l'anglais, ce mot cl\xe9 signifiant ",(0,i.jsx)(n.strong,{children:'"si"'}),", ex\xe9cute des instructions si et seulement si la condition donn\xe9e est vraie."]}),"\n",(0,i.jsx)(n.p,{children:"Un petit sch\xe9ma d'explications:"}),"\n",(0,i.jsx)(n.mermaid,{value:"flowchart\n\nA( ) --\x3e B{Condition}\nB --\x3e|false| D( )\nB --\x3e|true| C[bloc d'instructions]\n\nC --\x3e D\nD --\x3e|suite du programme| F( )"}),"\n",(0,i.jsx)(n.p,{children:"Voil\xe0 comment l'utiliser. Toutes les instructions entre accolades seront ex\xe9cut\xe9es si la condition est vraie."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"if( /* condtion */ )\n{\n    // ...\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",metastring:'title="Un petit exemple"',children:'#include <iostream>\nint main()\n{\n    float price { 114.2f };\n\n    if ( price >= 100.f )\n    {\n        // appliquer une r\xe9duction si l\'on d\xe9passe un certain prix\n        price *= 0.9f;\n    }\n\n    std::cout << "Le prix final est de " << price << "\u20ac" << std::endl;\n\n    return 0;\n}\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"caution",children:[(0,i.jsxs)(n.p,{children:["Il est possible de cr\xe9er des variables \xe0 l'int\xe9rieur m\xeame des accolades de la structure de contr\xf4le mais celles-ci sont restreintes \xe0 cette ",(0,i.jsx)(n.strong,{children:"port\xe9e"}),".\nC'est ce qu'on appelle la port\xe9e des variables (",(0,i.jsx)(n.strong,{children:"scope"})," en anglais)."]}),(0,i.jsxs)(n.p,{children:["Plus g\xe9n\xe9ralement, cette r\xe8gle du C++ s'applique \xe0 n'importe quel bloc entre accolades.\n",(0,i.jsx)(n.strong,{children:"Une variable n\u2019est utilisable que dans la port\xe9e, ou le bloc d\u2019accolades o\xf9 elle a \xe9t\xe9 d\xe9clar\xe9e."})]}),(0,i.jsx)(n.p,{children:"Nous en reparlerons plus en d\xe9tail dans d'autres chapitres."})]}),"\n",(0,i.jsxs)(n.admonition,{type:"caution",children:[(0,i.jsx)(n.p,{children:"Il n'est pas tr\xe8s utile de tester par une \xe9galit\xe9 le r\xe9sultat d'une condition :"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"float const price { 114.2f };\nbool const isExpensive { price >= 100.f };\n\nif ( isExpensive == true )\n{\n    // ...\n}\n"})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"isExpensive"})," ici \xe9tant d\xe9j\xe0 une valeur bool\xe9enne ajouter une \xe9galit\xe9 suppl\xe9mentaire avec la valeur ",(0,i.jsx)(n.code,{children:"true"})," ne va rien faire d'autre que de cr\xe9er une nouvelle valeur bool\xe9enne qui a la m\xeame valeur."]}),(0,i.jsx)(n.p,{children:"Il est donc plus clair et concis d'\xe9crire directement:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"bool const isExpensive { price >= 100.f };\n\nif ( isExpensive )\n{\n    // ...\n}\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"sinon",children:"Sinon"}),"\n",(0,i.jsx)(n.p,{children:"C'est tr\xe8s bien de pouvoir effectuer quelque chose si une condition est v\xe9rif\xe9e mais comment faire si l'on veut effectuer une action A si la condition est v\xe9rif\xe9e et une autre action B si ce n'est pas le cas ?"}),"\n",(0,i.jsxs)(n.p,{children:["On pourrait tr\xe8s bien encha\xeener deux ",(0,i.jsx)(n.code,{children:"if"})," avec la condition oppos\xe9e:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\nint main()\n{\n    float temperature { 24.0f };\n\n    if ( temperature >= 35.f )\n    {\n        std::cout << "il fait chaud" << std::endl;\n    }\n\n    if ( temperature < 35.f )\n    {\n        std::cout << "il fait froid" << std::endl;\n    }\n\n    return 0;\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Mais c'est l\xe0 que le mot-cl\xe9 ",(0,i.jsx)(n.code,{children:"else"})," (de l'anglais \"sinon\") nous permet d'ex\xe9cuter des instructions si la condition du ",(0,i.jsx)(n.code,{children:"if"})," est fausse de mani\xe8re plus compr\xe9hensible:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\nint main()\n{\n    float temperature { 24.0f };\n\n    if ( temperature >= 35.f )\n    {\n        std::cout << "il fait chaud" << std::endl;\n    }\n    else\n    {\n        std::cout << "il fait froid" << std::endl;\n    }\n\n    return 0;\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Ici le ",(0,i.jsx)(n.strong,{children:"else"}),' n\'a pas de parenth\xe8se et indique donc "tout le reste" (ce qui ne v\xe9rifie pas la condition).']}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["L'op\xe9rateur logique de n\xe9gation ",(0,i.jsx)("kbd",{children:"!"})," est parfois tr\xe8s utile dans le cas o\xf9 l'on avait stock\xe9 une valeur mais l'on souhaite faire une suite d'instructions uniquement dans le bloc ",(0,i.jsx)(n.code,{children:"else"})," du ",(0,i.jsx)(n.code,{children:"if"}),"."]}),(0,i.jsx)(n.p,{children:"Au lieu de faire :"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <iostream>\nint main()\n{\n    bool condition { false };\n\n    if ( condition )\n    {\n        // ... ne rien faire\n    }\n    else\n    {\n        // effectuer nos instructions\n    }\n\n    return 0;\n}\n"})}),(0,i.jsx)(n.p,{children:"Il est pr\xe9f\xe9rable de faire:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <iostream>\nint main()\n{\n    bool condition { false };\n\n    if ( !condition )\n    {\n        // effectuer nos instructions\n    }\n\n    return 0;\n}\n"})})]}),"\n",(0,i.jsx)(n.p,{children:'Mais comment tester une succession de conditions diff\xe9rentes avant de faire "tout le reste"\u202f?'}),"\n",(0,i.jsx)(n.h3,{id:"sinon-si",children:"Sinon si"}),"\n",(0,i.jsxs)(n.p,{children:["On pourrait tr\xe8s bien cha\xeener plusieurs ",(0,i.jsx)(n.code,{children:"if"})," et ",(0,i.jsx)(n.code,{children:"else"})," imbriqu\xe9s de cette mani\xe8re:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <iostream>\nint main()\n{\n    float temperature { 24.0f };\n\n    if ( /* condition1 */ )\n    {\n        // ...\n    }\n    else\n    {\n        if ( /* condition2 */ )\n        {\n            // ...\n        }\n        else\n        {\n            if ( /* condition3 */ )\n            {\n                //...\n            }\n            else \n            {\n               //...  \n            }\n        }\n    }\n    return 0;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Mais vous \xeates s\xfbrement d'accord pour dire que \xe7a commence \xe0 \xeatre difficile \xe0 suivre et \xe9crire \xe0 cause des imbrications.\nLe C++ est bien fait et nous permet de d'utiliser la combinaison ",(0,i.jsx)(n.code,{children:"else if"})," pour ce cas de figure."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"else if"})," s\u2019utilise entre un ",(0,i.jsx)(n.code,{children:"if"})," et un ",(0,i.jsx)(n.code,{children:"else"}),' et signifie "ou alors si cette condition est vraie".']}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <iostream>\nint main()\n{\n    if ( /* condition1 */ )\n    {\n        // ...\n    }\n    else if ( /* condition2 */ )\n    {\n        // ...\n    }\n    else  if ( /* condition3 */ )\n    {\n        //...\n    }\n    else\n    {\n        //...  \n    }\n\n    return 0;\n}\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Enfin, il existe une derni\xe8re syntaxe (le ",(0,i.jsx)(n.code,{children:"switch"})," pour les curieux) qui permet de faire quelque chose de similaire au ",(0,i.jsx)(n.code,{children:"else if"})," mais il nous manque quelques notions et je vous le pr\xe9senterai donc au chapitre suivant sur les boucles."]})}),"\n",(0,i.jsx)(n.h2,{id:"faux-ami",children:"Faux-ami"}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:["Attention le test d'\xe9galit\xe9 ",(0,i.jsx)(n.code,{children:"=="})," est diff\xe9rent de l'op\xe9rateur d'affectation ",(0,i.jsx)(n.code,{children:"="}),"."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int number { 20 };\nif ( number = 10 )\n{\n    // ...\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["En ",(0,i.jsx)(n.strong,{children:"C++"}),", l'assignation retourne la valeur de la variable assign\xe9e. Ici, la condition sera vraie car ",(0,i.jsx)(n.code,{children:"number"})," vaut 10 apr\xe8s l'assignation et 10 est consid\xe9r\xe9 comme vrai."]}),"\n",(0,i.jsx)(n.p,{children:"Les valeurs num\xe9riques non nulles sont consid\xe9r\xe9es comme vraies et la valeur 0 est consid\xe9r\xe9e comme fausse."}),"\n",(0,i.jsx)(n.h2,{id:"combinaison-dexpressions",children:"Combinaison d'expressions"}),"\n",(0,i.jsxs)(n.p,{children:["Avec tous les op\xe9rateurs logiques vu pr\xe9c\xe9demment il est m\xeame possible de tester plusieurs conditions dans un m\xeame ",(0,i.jsx)(n.code,{children:"if"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <iostream>\nint main()\n{\n\n    float temperature { 24.0f };\n    bool const isRaining { false };\n    bool const wantToGoOut { true };\n    bool const ownsAnUmbrella { false };\n\n    if ( wantToGoOut && (!isRaining || (isRaining && ownsAnUmbrella) ) )\n    {\n        // ...\n    }\n    else\n    {\n        //...  \n    }\n\n    return 0;\n}\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"danger",children:[(0,i.jsx)(n.p,{children:"Les op\xe9rateurs logiques sont comme les op\xe9rateurs math\xe9matiques que nous avons vus dans les chapitres pr\xe9c\xe9dents: ils ont une priorit\xe9."}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Le plus prioritaire est la n\xe9gation ",(0,i.jsx)("kbd",{children:"!"})]}),"\n",(0,i.jsxs)(n.li,{children:["Ensuite c'est le ",(0,i.jsx)(n.strong,{children:"ET"})," ",(0,i.jsx)("kbd",{children:"&&"})]}),"\n",(0,i.jsxs)(n.li,{children:["Enfin, le ",(0,i.jsx)(n.strong,{children:"OU"})," ",(0,i.jsx)("kbd",{children:"||"})," est le moins prioritaire"]}),"\n"]}),(0,i.jsxs)(n.p,{children:["Par exemple avec le code ",(0,i.jsx)(n.code,{children:"a && b || c && d"}),", dans l\u2019ordre, on \xe9value ",(0,i.jsx)(n.code,{children:"a && b"}),", ",(0,i.jsx)(n.code,{children:"c && d"})," et enfin ",(0,i.jsx)(n.code,{children:"(a && b) || (c && d)"}),"."]}),(0,i.jsx)(n.p,{children:'Pour des raisons de lisibilit\xe9 je vous recommande tr\xe8s fortement d\'ajouter des parenth\xe8ses (comme dans mon exemple ci-dessus) pour expliciter quelles op\xe9rations vous voulez prioriser dans ce genre de cas plus "complexe".'})]}),"\n",(0,i.jsx)(n.h3,{id:"pour-aller-plus-loin",children:"Pour aller plus loin"}),"\n",(0,i.jsxs)(n.p,{children:["Enfin, pour aller encore plus loin il est possible de manipuler les op\xe9rateurs ",(0,i.jsx)(n.code,{children:"&&"}),", ",(0,i.jsx)(n.code,{children:"||"})," et ",(0,i.jsx)(n.code,{children:"!"})," et trouver des expressions donnant le m\xeame r\xe9sultat.\nCela permet parfois de simplifier le code ou alors d'exprimer la condition sous une forme plus lisible ou compr\xe9hensible."]}),"\n",(0,i.jsxs)(n.p,{children:["Dans mon exemple pr\xe9c\xe9dent la condition ",(0,i.jsx)(n.code,{children:"(!isRaining || (isRaining && ownsAnUmbrella))"})," est \xe9quivalente \xe0 \xe9crire ",(0,i.jsx)(n.code,{children:"(!isRaining || ownsAnUmbrella)"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Il existe aussi le ",(0,i.jsx)(n.strong,{children:"th\xe9or\xe8me de De Morgan"})," qui permet d'exprimer la n\xe9gation d'un ",(0,i.jsx)(n.strong,{children:"ET"})," avec un ",(0,i.jsx)(n.strong,{children:"OU"})," et inversement."]}),"\n",(0,i.jsx)(n.p,{children:"Il est possible d'exprimer mon exemple pr\xe9c\xe9dent sous cette forme:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"(!isRaining || ownsAnUmbrella)"})," \xe9quivalent \xe0 ",(0,i.jsx)(n.code,{children:"!(isRaining && !ownsAnUmbrella)"})]}),"\n",(0,i.jsx)(n.p,{children:"On peut s'en convaincre en essayant de traduire ces conditions en phrases:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"(!isRaining || ownsAnUmbrella)"}),": c'est le cas o\xf9 il ne pleut pas ou alors j'ai un parapluie.\n",(0,i.jsx)(n.code,{children:"!(isRaining && !ownsAnUmbrella)"})," ce n'est ",(0,i.jsx)(n.strong,{children:"pas"})," le cas o\xf9 il pleut et je n'ai pas de parapluie."]}),"\n",(0,i.jsxs)(n.p,{children:["Vous trouverez des exemples de propri\xe9t\xe9s et simplifications possibles sur la page Wikip\xe9dia suivante:\n",(0,i.jsx)(n.a,{href:"https://fr.wikipedia.org/wiki/Alg%C3%A8bre_de_Boole_(logique)",children:"Alg\xe8bre de Boole"})]}),"\n",(0,i.jsx)(n.h2,{id:"en-r\xe9sum\xe9",children:"En r\xe9sum\xe9"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Une valeur bool\xe9enne est du type ",(0,i.jsx)(n.strong,{children:"bool"})," et peut prendre comme valeur ",(0,i.jsx)(n.code,{children:"true"})," ou ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["On obtient une valeur bool\xe9enne avec une condition sur nos variables (avec les op\xe9rateurs de comparaison ",(0,i.jsx)("kbd",{children:"=="}),", ",(0,i.jsx)("kbd",{children:"!="}),", ",(0,i.jsx)("kbd",{children:"<"}),", ",(0,i.jsx)("kbd",{children:"<="}),", ",(0,i.jsx)("kbd",{children:">"})," ou ",(0,i.jsx)("kbd",{children:">="}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Les op\xe9rateurs ",(0,i.jsx)("kbd",{children:"&&"}),", ",(0,i.jsx)("kbd",{children:"||"})," et ",(0,i.jsx)("kbd",{children:"!"})," permettent de modifier et combiner les valeurs bool\xe9ennes."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["On utilise les structures de contr\xf4le ",(0,i.jsx)(n.code,{children:"if"}),", ",(0,i.jsx)(n.code,{children:"else"}),", ",(0,i.jsx)(n.code,{children:"else if"})," pour ex\xe9cuter des instructions diff\xe9rentes en fonction des conditions."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>t});var i=s(67294);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);