"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[2440],{9824:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(5893),t=n(1151);const i={title:"Graphes",tags:["C++"]},a=void 0,l={id:"Lessons/S2/graphs",title:"Graphes",description:"En informatique, il existe une grande famille de structures de donn\xe9es appel\xe9e graphes. C'est un outil tr\xe8s puissant qui permet de mod\xe9liser des probl\xe8mes tr\xe8s vari\xe9s. Dans cette le\xe7on, nous allons voir comment repr\xe9senter un graphe en m\xe9moire et comment parcourir un graphe.",source:"@site/content/Lessons/S2/08_graphs.md",sourceDirName:"Lessons/S2",slug:"/Lessons/S2/graphs",permalink:"/Learn--cpp_programming/Lessons/S2/graphs",draft:!1,unlisted:!1,tags:[{label:"C++",permalink:"/Learn--cpp_programming/tags/c"}],version:"current",sidebarPosition:8,frontMatter:{title:"Graphes",tags:["C++"]},sidebar:"Lessons",previous:{title:"Compression et encodage de donn\xe9es",permalink:"/Learn--cpp_programming/Lessons/S2/EncodingAndCompression"}},d={},c=[{value:"Quelques d\xe9finitions",id:"quelques-d\xe9finitions",level:2},{value:"Les arbres",id:"les-arbres",level:3},{value:"Repr\xe9sentation d&#39;un graphe",id:"repr\xe9sentation-dun-graphe",level:2},{value:"Matrice d&#39;adjacence",id:"matrice-dadjacence",level:3},{value:"Liste d&#39;adjacence",id:"liste-dadjacence",level:3},{value:"Parcours d&#39;un graphe",id:"parcours-dun-graphe",level:2},{value:"Parcours en largeur",id:"parcours-en-largeur",level:3},{value:"Parcours en profondeur",id:"parcours-en-profondeur",level:3},{value:"En pratique",id:"en-pratique",level:2},{value:"Dijkstra",id:"dijkstra",level:3},{value:"Pour aller plus loin: A*",id:"pour-aller-plus-loin-a",level:3},{value:"Simplification 2D",id:"simplification-2d",level:2},{value:"R\xe9sum\xe9",id:"r\xe9sum\xe9",level:2},{value:"Sources",id:"sources",level:2}];function o(e){const s={a:"a",admonition:"admonition",annotation:"annotation",h2:"h2",h3:"h3",li:"li",math:"math",mermaid:"mermaid",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["En informatique, il existe une grande famille de structures de donn\xe9es appel\xe9e ",(0,r.jsx)(s.strong,{children:"graphes"}),". C'est un outil tr\xe8s puissant qui permet de mod\xe9liser des probl\xe8mes tr\xe8s vari\xe9s. Dans cette le\xe7on, nous allons voir comment repr\xe9senter un graphe en m\xe9moire et comment parcourir un graphe."]}),"\n",(0,r.jsx)(s.h2,{id:"quelques-d\xe9finitions",children:"Quelques d\xe9finitions"}),"\n",(0,r.jsxs)(s.p,{children:["Un ",(0,r.jsx)(s.strong,{children:"graphe"})," est un ensemble de ",(0,r.jsx)(s.strong,{children:"sommets"})," reli\xe9s par des ",(0,r.jsx)(s.strong,{children:"ar\xeates"}),". On peut repr\xe9senter un graphe par un ensemble de points reli\xe9s par des traits. Les points sont les sommets et les traits sont les ar\xeates."]}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A -.- B\n    A -.- C\n    B -.- C\n    B -.- D"}),"\n",(0,r.jsxs)(s.p,{children:["Un graphe est dit ",(0,r.jsx)(s.strong,{children:"orient\xe9"})," si les ar\xeates ont un sens. Dans ce cas, on parle d'",(0,r.jsx)(s.strong,{children:"arc"}),". Un graphe est dit ",(0,r.jsx)(s.strong,{children:"non orient\xe9"})," si les ar\xeates n'ont pas de sens."]}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A --\x3e B\n    A --\x3e C\n    B --\x3e C\n    B --\x3e D"}),"\n",(0,r.jsxs)(s.p,{children:["Un graphe est dit ",(0,r.jsx)(s.strong,{children:"pond\xe9r\xe9"})," si les ar\xeates ont un poids. Dans ce cas, on parle de ",(0,r.jsx)(s.strong,{children:"poids"})," d'une ar\xeate. Un graphe est dit ",(0,r.jsx)(s.strong,{children:"non pond\xe9r\xe9"})," si les ar\xeates n'ont pas de poids."]}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A --1--\x3e B\n    A --3--\x3e C\n    B --1--\x3e C\n    B --2--\x3e D"}),"\n",(0,r.jsxs)(s.p,{children:["Un graphe est dit ",(0,r.jsx)(s.strong,{children:"connexe"})," si tous les sommets sont reli\xe9s entre eux par une ar\xeate ou une suite d'ar\xeates."]}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A --\x3e B\n    A --\x3e C\n    B --\x3e C\n    D"}),"\n",(0,r.jsxs)(s.p,{children:["Un graphe est dit ",(0,r.jsx)(s.strong,{children:"cyclique"})," si il contient au moins un cycle. Un cycle est une suite d'ar\xeates qui permet de revenir au point de d\xe9part."]}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A --\x3e B\n    B --\x3e C\n    C --\x3e A"}),"\n",(0,r.jsx)(s.h3,{id:"les-arbres",children:"Les arbres"}),"\n",(0,r.jsxs)(s.p,{children:["On a pr\xe9c\xe9demment vu les ",(0,r.jsx)(s.strong,{children:"arbres binaires"}),". Un arbre n'est rien d'autre qu'un graphe particulier. Un arbre est un graphe ",(0,r.jsx)(s.strong,{children:"non orient\xe9"}),", ",(0,r.jsx)(s.strong,{children:"non pond\xe9r\xe9"}),", ",(0,r.jsx)(s.strong,{children:"connexe"})," et ",(0,r.jsx)(s.strong,{children:"acyclique"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"repr\xe9sentation-dun-graphe",children:"Repr\xe9sentation d'un graphe"}),"\n",(0,r.jsx)(s.p,{children:"Il existe plusieurs mani\xe8res de repr\xe9senter un graphe en m\xe9moire. Nous allons voir les deux plus courantes."}),"\n",(0,r.jsx)(s.h3,{id:"matrice-dadjacence",children:"Matrice d'adjacence"}),"\n",(0,r.jsxs)(s.p,{children:["La premi\xe8re mani\xe8re de repr\xe9senter un graphe est d'utiliser une ",(0,r.jsx)(s.strong,{children:"matrice d'adjacence"}),". Une matrice d'adjacence est une matrice carr\xe9e dont les lignes et les colonnes repr\xe9sentent les sommets du graphe. Si le sommet ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"i"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]})," est reli\xe9 au sommet ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"j"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"j"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.854em",verticalAlign:"-0.1944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"})]})})]}),", alors la case ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"j"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"(i,j)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]})," de la matrice vaut 1. Sinon, elle vaut 0. Si le graphe est pond\xe9r\xe9, la case ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"j"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"(i,j)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]})," de la matrice vaut le poids de l'ar\xeate."]}),"\n",(0,r.jsx)(s.p,{children:"Voici un exemple de matrice d'adjacence pour un graphe non orient\xe9 et non pond\xe9r\xe9 :"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{}),(0,r.jsx)(s.th,{children:"A"}),(0,r.jsx)(s.th,{children:"B"}),(0,r.jsx)(s.th,{children:"C"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"E"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"A"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"B"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"C"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"D"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"E"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Et le graphe correspondant :"}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A --- B\n    A --- C\n    B --- C\n    B --- D\n    C --- E\n    D --- E"}),"\n",(0,r.jsx)(s.p,{children:"Dans le cas d'un graphe orient\xe9, la matrice n'est plus sym\xe9trique. Voici un exemple de matrice d'adjacence pour un graphe orient\xe9 et non pond\xe9r\xe9 :"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{}),(0,r.jsx)(s.th,{children:"A"}),(0,r.jsx)(s.th,{children:"B"}),(0,r.jsx)(s.th,{children:"C"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"E"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"A"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"B"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"0"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"C"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"D"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"E"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"0"})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Et le graphe correspondant :"}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A --\x3e B\n    A --\x3e C\n    B --\x3e C\n    B --\x3e D\n    C --\x3e E\n    D --\x3e E"}),"\n",(0,r.jsx)(s.h3,{id:"liste-dadjacence",children:"Liste d'adjacence"}),"\n",(0,r.jsxs)(s.p,{children:["La deuxi\xe8me mani\xe8re de repr\xe9senter un graphe est d'utiliser une ",(0,r.jsx)(s.strong,{children:"liste d'adjacence"}),". Une liste d'adjacence est une liste de listes. Pour chaque sommet, on a une liste des sommets adjacents. Si le graphe est pond\xe9r\xe9, on a une liste des sommets adjacents avec leur poids (avec une paire par exemple)."]}),"\n",(0,r.jsx)(s.p,{children:"Voici un exemple de liste d'adjacence pour un graphe non orient\xe9 et non pond\xe9r\xe9 :"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Sommet"}),(0,r.jsx)(s.th,{children:"Adjacents"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"A"}),(0,r.jsx)(s.td,{children:"B, C"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"B"}),(0,r.jsx)(s.td,{children:"A, C, D"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"C"}),(0,r.jsx)(s.td,{children:"A, B, E"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"D"}),(0,r.jsx)(s.td,{children:"B, E"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"E"}),(0,r.jsx)(s.td,{children:"C, D"})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:["En pratique, on utilise plut\xf4t la ",(0,r.jsx)(s.strong,{children:"liste d'adjacence"})," pour repr\xe9senter un graphe car la ",(0,r.jsx)(s.strong,{children:"matrice d'adjacence"})," peut \xeatre tr\xe8s co\xfbteuse en m\xe9moire. En effet, une matrice d'adjacence est une matrice carr\xe9e. Donc, si on a ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"n"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," sommets, on a ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsxs)(s.msup,{children:[(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mn,{children:"2"})]})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"n^2"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,r.jsxs)(s.span,{className:"mord",children:[(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"msupsub",children:(0,r.jsx)(s.span,{className:"vlist-t",children:(0,r.jsx)(s.span,{className:"vlist-r",children:(0,r.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,r.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})})]})," cases. M\xeame si le graphe poss\xe8de peu d'ar\xeates, la matrice d'adjacence est quand m\xeame de taille ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsxs)(s.msup,{children:[(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mn,{children:"2"})]})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"n^2"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,r.jsxs)(s.span,{className:"mord",children:[(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"msupsub",children:(0,r.jsx)(s.span,{className:"vlist-t",children:(0,r.jsx)(s.span,{className:"vlist-r",children:(0,r.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,r.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})})]}),". Cela peut \xeatre l\xe9g\xe8rement optimis\xe9 dans le cas des graphes non orient\xe9s car la matrice est sym\xe9trique. On peut donc ne stocker que la moiti\xe9 de la matrice. Mais cela reste quand m\xeame tr\xe8s co\xfbteux en m\xe9moire."]}),"\n",(0,r.jsxs)(s.p,{children:["L'utilit\xe9 de la ",(0,r.jsx)(s.strong,{children:"matrice d'adjacence"})," est qu'elle permet de savoir si deux sommets sont reli\xe9s en ",(0,r.jsx)(s.strong,{children:"temps constant"}),". Dans les cas o\xf9 c'est acceptable de stocker une matrice d'adjacence, on peut donc utiliser cette propri\xe9t\xe9 pour gagner du temps. Cela a aussi des applications en th\xe9orie des graphes pour analyser des graphes."]}),"\n",(0,r.jsx)(s.h2,{id:"parcours-dun-graphe",children:"Parcours d'un graphe"}),"\n",(0,r.jsxs)(s.p,{children:["Maintenant que nous avons vu comment repr\xe9senter un graphe en m\xe9moire, nous allons voir comment parcourir un graphe. Il existe principalement deux mani\xe8res de parcourir un graphe : en ",(0,r.jsx)(s.strong,{children:"largeur"})," et en ",(0,r.jsx)(s.strong,{children:"profondeur"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"Donnons-nous le graphe suivant :"}),"\n",(0,r.jsx)(s.mermaid,{value:"graph TB\n    A --\x3e B\n    A --\x3e C\n    B --\x3e D\n    B --\x3e E\n    C --\x3e F\n    C --\x3e G"}),"\n",(0,r.jsx)(s.h3,{id:"parcours-en-largeur",children:"Parcours en largeur"}),"\n",(0,r.jsx)(s.p,{children:"Le parcours en largeur consiste \xe0 parcourir le graphe en partant d'un sommet et en visitant tous les sommets adjacents avant de passer aux sommets adjacents de ces sommets adjacents. On visite donc les sommets par niveau."}),"\n",(0,r.jsxs)(s.p,{children:["Pour parcourir un graphe en largeur, on utilise une ",(0,r.jsx)(s.strong,{children:"file"}),". On commence par ajouter le sommet de d\xe9part dans la file. Tant que la file n'est pas vide, on retire le premier \xe9l\xe9ment de la file et on l'ajoute \xe0 la liste des sommets visit\xe9s. Ensuite, on ajoute tous les sommets adjacents de ce sommet dans la file. On recommence jusqu'\xe0 ce que la file soit vide."]}),"\n",(0,r.jsx)(s.p,{children:"Voici le d\xe9roulement du parcours en largeur au d\xe9part du n\u0153ud A pour le graphe pr\xe9c\xe9dent :"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["On commence par ajouter le sommet ",(0,r.jsx)(s.strong,{children:"A"})," dans la file."]}),"\n",(0,r.jsxs)(s.li,{children:["Comme la file n'est pas vide, on retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"A"}),") de la file. On ajoute ensuite tous les sommets adjacents de ce sommet dans la file. On ajoute donc ",(0,r.jsx)(s.strong,{children:"B"})," et ",(0,r.jsx)(s.strong,{children:"C"})," dans la file."]}),"\n",(0,r.jsxs)(s.li,{children:["On retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"B"}),") de la file. On ajoute ensuite tous les sommets adjacents de ce sommet dans la file. On ajoute donc ",(0,r.jsx)(s.strong,{children:"D"})," et ",(0,r.jsx)(s.strong,{children:"E"})," dans la file. La file contient maintenant ",(0,r.jsx)(s.strong,{children:"C"}),", ",(0,r.jsx)(s.strong,{children:"D"})," et ",(0,r.jsx)(s.strong,{children:"E"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["On retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"C"}),") de la file. On ajoute ensuite tous les sommets adjacents de ce sommet dans la file. On ajoute donc ",(0,r.jsx)(s.strong,{children:"F"})," et ",(0,r.jsx)(s.strong,{children:"G"})," dans la file. La file contient maintenant ",(0,r.jsx)(s.strong,{children:"D"}),", ",(0,r.jsx)(s.strong,{children:"E"}),", ",(0,r.jsx)(s.strong,{children:"F"})," et ",(0,r.jsx)(s.strong,{children:"G"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["On retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"D"}),") de la file. On ajoute ensuite tous les sommets adjacents de ce sommet dans la file. On ajoute donc rien dans la file. La file contient maintenant ",(0,r.jsx)(s.strong,{children:"E"}),", ",(0,r.jsx)(s.strong,{children:"F"})," et ",(0,r.jsx)(s.strong,{children:"G"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["On fait de m\xeame pour ",(0,r.jsx)(s.strong,{children:"E"}),", ",(0,r.jsx)(s.strong,{children:"F"})," et ",(0,r.jsx)(s.strong,{children:"G"}),". La file est maintenant vide. On a donc parcouru tous les sommets du graphe."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Cela nous donne donc le parcours suivant : ",(0,r.jsx)(s.strong,{children:"A, B, C, D, E, F, G"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"parcours-en-profondeur",children:"Parcours en profondeur"}),"\n",(0,r.jsx)(s.p,{children:"Le parcours en profondeur consiste \xe0 parcourir le graphe en partant d'un sommet et en visitant ses sommets adjacents puis les sommets adjacents de ces sommets adjacents, etc. On visite donc les sommets en profondeur. On peut voir le parcours en profondeur comme une descente dans le graphe."}),"\n",(0,r.jsxs)(s.p,{children:["Pour parcourir un graphe en profondeur, on utilise une ",(0,r.jsx)(s.strong,{children:"pile"}),". On commence par ajouter le sommet de d\xe9part dans la pile. Tant que la pile n'est pas vide, on retire le premier \xe9l\xe9ment de la pile et on l'ajoute \xe0 la liste des sommets visit\xe9s. Ensuite, on ajoute tous les sommets adjacents de ce sommet dans la pile. On recommence jusqu'\xe0 ce que la pile soit vide."]}),"\n",(0,r.jsxs)(s.p,{children:["Voici le d\xe9roulement du parcours en profondeur au d\xe9part du n\u0153ud ",(0,r.jsx)(s.strong,{children:"A"})," pour le graphe pr\xe9c\xe9dent :"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["On commence par ajouter le sommet ",(0,r.jsx)(s.strong,{children:"A"})," dans la pile."]}),"\n",(0,r.jsxs)(s.li,{children:["Comme la pile n'est pas vide, on retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"A"}),") de la pile. On ajoute ensuite tous les sommets adjacents de ce sommet dans la pile. On ajoute donc ",(0,r.jsx)(s.strong,{children:"B"})," et ",(0,r.jsx)(s.strong,{children:"C"})," dans la pile."]}),"\n",(0,r.jsxs)(s.li,{children:["On retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"C"}),") de la pile. On ajoute ensuite tous les sommets adjacents de ce sommet dans la pile. On ajoute donc ",(0,r.jsx)(s.strong,{children:"F"})," et ",(0,r.jsx)(s.strong,{children:"G"})," dans la pile. La pile contient maintenant ",(0,r.jsx)(s.strong,{children:"B"}),", ",(0,r.jsx)(s.strong,{children:"F"})," et ",(0,r.jsx)(s.strong,{children:"G"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["On retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"G"}),") de la pile. On ajoute ensuite tous les sommets adjacents de ce sommet dans la pile. On ajoute donc rien dans la pile. La pile contient maintenant ",(0,r.jsx)(s.strong,{children:"B"})," et ",(0,r.jsx)(s.strong,{children:"F"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["On retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"F"}),") de la pile. On ajoute ensuite tous les sommets adjacents de ce sommet dans la pile. On ajoute donc rien dans la pile. La pile contient maintenant ",(0,r.jsx)(s.strong,{children:"B"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["On retire le premier \xe9l\xe9ment (",(0,r.jsx)(s.strong,{children:"B"}),") de la pile. On ajoute ensuite tous les sommets adjacents de ce sommet dans la pile. On ajoute donc ",(0,r.jsx)(s.strong,{children:"D"})," et ",(0,r.jsx)(s.strong,{children:"E"})," dans la pile. La pile contient maintenant ",(0,r.jsx)(s.strong,{children:"D"})," et ",(0,r.jsx)(s.strong,{children:"E"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["On fait de m\xeame pour ",(0,r.jsx)(s.strong,{children:"E"})," et ",(0,r.jsx)(s.strong,{children:"D"}),". La pile est maintenant vide. On a donc parcouru tous les sommets du graphe."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Ce qui nous donne le parcours suivant : ",(0,r.jsx)(s.strong,{children:"A, C, G, F, B, E, D"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"en-pratique",children:"En pratique"}),"\n",(0,r.jsx)(s.p,{children:"Maintenant que nous avons vu ce qu'est un graphe il est l\xe9gitime de se demander \xe0 quoi cela peut bien servir. En effet, on peut se demander si on a d\xe9j\xe0 rencontr\xe9 des graphes dans la vie de tous les jours. La r\xe9ponse est oui. Les graphes sont utilis\xe9s dans de nombreux domaines. En voici quelques exemples :"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Les r\xe9seaux sociaux : les graphes sont utilis\xe9s pour mod\xe9liser les relations entre les utilisateurs."}),"\n",(0,r.jsx)(s.li,{children:"Les jeux vid\xe9os : les graphes sont utilis\xe9s pour mod\xe9liser les niveaux, les cartes ou encore pour de la recherche de chemin (intelligence artificielle des ennemis par exemple)."}),"\n",(0,r.jsx)(s.li,{children:"Les bases de donn\xe9es : les graphes sont utilis\xe9s pour mod\xe9liser les relations entre les donn\xe9es."}),"\n",(0,r.jsx)(s.li,{children:"Les probl\xe8mes de transport : les graphes sont utilis\xe9s pour mod\xe9liser les r\xe9seaux de transport (routes, m\xe9tro, etc.) et permettent de r\xe9soudre des probl\xe8mes d'optimisation (par exemple, trouver le plus court chemin entre deux villes)."}),"\n",(0,r.jsxs)(s.li,{children:["Des algorithmes de programmation dynamique : les graphes sont beaucoup utilis\xe9s dans les algorithmes dis de programmation ",(0,r.jsx)(s.strong,{children:"dynamique"})," o\xf9 le probl\xe8me est si complexe qu'il est n\xe9cessaire de le d\xe9composer en sous-probl\xe8mes, de faire des estimations et d'explorer les solutions possibles \xe0 travers un graphe de solutions."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"dijkstra",children:"Dijkstra"}),"\n",(0,r.jsxs)(s.p,{children:["Je vous propose de voir un exemple d'algorithme de graphe : l'algorithme de ",(0,r.jsx)(s.strong,{children:"Dijkstra"}),". Cet algorithme permet de trouver le plus court chemin entre deux sommets d'un graphe ",(0,r.jsx)(s.strong,{children:"pond\xe9r\xe9"}),". Il est tr\xe8s r\xe9pandu et est utilis\xe9 dans de nombreux domaines."]}),"\n",(0,r.jsx)(s.p,{children:"L'algorithme de Dijkstra est simplement une application du parcours en largeur. On part d'un sommet de d\xe9part et on visite tous les sommets adjacents. On ajoute ensuite les sommets adjacents de ces sommets adjacents dans la file. On recommence jusqu'\xe0 ce qu'on ait trouv\xe9 le sommet d'arriv\xe9e. On peut alors remonter le chemin en partant du sommet d'arriv\xe9e et en remontant les sommets pr\xe9c\xe9dents jusqu'au sommet de d\xe9part."}),"\n",(0,r.jsx)(s.p,{children:"Il faut une liste de m\xeame taille que le nombre de sommets du graphe pour stocker les distances. On initialise toutes les distances \xe0 l'infini sauf la distance du sommet de d\xe9part qui est \xe0 0. On utilise \xe9galement une file pour stocker les sommets \xe0 visiter et une liste pour stocker les sommets d\xe9j\xe0 visit\xe9s. On commence par ajouter le sommet de d\xe9part dans la file des sommets \xe0 visiter. Tant que la file n'est pas vide, on retire le premier \xe9l\xe9ment de la file et on l'ajoute \xe0 la liste des sommets visit\xe9s. Ensuite, on ajoute tous les sommets adjacents de ce sommet dans la file s'ils n'ont pas d\xe9j\xe0 \xe9t\xe9 visit\xe9s. Pour chaque sommet adjacent, on met \xe0 jour sa distance si la distance actuelle est plus grande que la distance du sommet actuel plus le poids de l'ar\xeate entre le sommet actuel et le sommet adjacent. On recommence jusqu'\xe0 ce que la file soit vide."}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsx)(s.p,{children:"Dans la pratique, on utilise une file de priorit\xe9 pour stocker les sommets \xe0 visiter. Cela permet de toujours retirer le sommet avec la plus petite distance en premier. Cela permet d'optimiser l'algorithme.\nDe plus, g\xe9n\xe9ralement, cet algorithme est utilis\xe9 pour trouver le plus court chemin entre deux sommets. On peut donc s'arr\xeater d\xe8s qu'on a trouv\xe9 le sommet d'arriv\xe9e."})}),"\n",(0,r.jsx)(s.admonition,{type:"warning",children:(0,r.jsxs)(s.p,{children:["L'algorithme de Dijkstra ne fonctionne que pour les graphes ",(0,r.jsx)(s.strong,{children:"pond\xe9r\xe9s positivement"}),". En effet, si le graphe contient des ar\xeates de poids n\xe9gatif, l'algorithme peut boucler ind\xe9finiment. Pour \xe9viter ces probl\xe8mes,il est aussi possible d'utiliser une variante: l'algorithme de ",(0,r.jsx)(s.strong,{children:"Bellman-Ford"})," qui est plus lent mais qui fonctionne pour les graphes avec des cycles et des ar\xeates de poids n\xe9gatif."]})}),"\n",(0,r.jsx)(s.p,{children:"Pour illustrer l'algorithme de Dijkstra, donnons-nous le graphe suivant :"}),"\n",(0,r.jsx)(s.mermaid,{value:"graph LR\n    A --1--\x3e B\n    A --3--\x3e C\n    B --1--\x3e C\n    B --2--\x3e D\n    C --1--\x3e E\n    D --1--\x3e E"}),"\n",(0,r.jsxs)(s.p,{children:["on consid\xe8re que le sommet de d\xe9part est ",(0,r.jsx)(s.strong,{children:"A"})," ."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"A"}),(0,r.jsx)(s.th,{children:"B"}),(0,r.jsx)(s.th,{children:"C"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"E"}),(0,r.jsx)(s.th,{children:"Sommets \xe0 visiter"}),(0,r.jsx)(s.th,{children:"Sommets visit\xe9s"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{mathvariant:"normal",children:"\u221e"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\infty"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord",children:"\u221e"})]})})]})}),(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{mathvariant:"normal",children:"\u221e"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\infty"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord",children:"\u221e"})]})})]})}),(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{mathvariant:"normal",children:"\u221e"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\infty"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord",children:"\u221e"})]})})]})}),(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{mathvariant:"normal",children:"\u221e"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\infty"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord",children:"\u221e"})]})})]})}),(0,r.jsx)(s.td,{children:"[A]"}),(0,r.jsx)(s.td,{children:"[-]"})]})})]}),"\n",(0,r.jsxs)(s.p,{children:["On commence par ajouter le sommet de d\xe9part ",(0,r.jsx)(s.strong,{children:"A"})," dans la file de priorit\xe9 des sommets \xe0 visiter. On initialise \xe9galement la distance du sommet de d\xe9part \xe0 0 et les autres distances \xe0 l'infini."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"B"})," et ",(0,r.jsx)(s.strong,{children:"C"})," sont les sommets adjacents de ",(0,r.jsx)(s.strong,{children:"A"}),". On ajoute donc ",(0,r.jsx)(s.strong,{children:"B"})," et ",(0,r.jsx)(s.strong,{children:"C"})," dans la file de priorit\xe9 des sommets \xe0 visiter. On met \xe9galement \xe0 jour les distances de ",(0,r.jsx)(s.strong,{children:"B"})," et ",(0,r.jsx)(s.strong,{children:"C"}),". La distance de ",(0,r.jsx)(s.strong,{children:"B"})," est la distance de ",(0,r.jsx)(s.strong,{children:"A"})," plus le poids de l'ar\xeate entre ",(0,r.jsx)(s.strong,{children:"A"})," et ",(0,r.jsx)(s.strong,{children:"B"}),". La distance de ",(0,r.jsx)(s.strong,{children:"C"})," est la distance de ",(0,r.jsx)(s.strong,{children:"A"})," plus le poids de l'ar\xeate entre ",(0,r.jsx)(s.strong,{children:"A"})," et ",(0,r.jsx)(s.strong,{children:"C"}),"."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"A"}),(0,r.jsx)(s.th,{children:"B"}),(0,r.jsx)(s.th,{children:"C"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"E"}),(0,r.jsx)(s.th,{children:"Sommets \xe0 visiter"}),(0,r.jsx)(s.th,{children:"Sommets visit\xe9s"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1(A)"}),(0,r.jsx)(s.td,{children:"3(A)"}),(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{mathvariant:"normal",children:"\u221e"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\infty"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord",children:"\u221e"})]})})]})}),(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{mathvariant:"normal",children:"\u221e"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\infty"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord",children:"\u221e"})]})})]})}),(0,r.jsx)(s.td,{children:"[B, C]"}),(0,r.jsx)(s.td,{children:"[A]"})]})})]}),"\n",(0,r.jsxs)(s.p,{children:["On continue en retirant le sommet ",(0,r.jsx)(s.strong,{children:"B"}),". Il a comme sommets adjacents ",(0,r.jsx)(s.strong,{children:"C"})," et ",(0,r.jsx)(s.strong,{children:"D"}),". ",(0,r.jsx)(s.strong,{children:"C"})," a d\xe9j\xe0 une distance de 3(venant de ",(0,r.jsx)(s.strong,{children:"A"}),") mais la distance depuis ",(0,r.jsx)(s.strong,{children:"B"})," est plus petite (1 venant de ",(0,r.jsx)(s.strong,{children:"A"})," plus 1 venant de ",(0,r.jsx)(s.strong,{children:"B"}),"). On met donc \xe0 jour la distance de ",(0,r.jsx)(s.strong,{children:"C"}),". La distance de ",(0,r.jsx)(s.strong,{children:"D"})," est la distance de ",(0,r.jsx)(s.strong,{children:"B"})," plus le poids de l'ar\xeate entre ",(0,r.jsx)(s.strong,{children:"B"})," et ",(0,r.jsx)(s.strong,{children:"D"}),". On ajoute ensuite ",(0,r.jsx)(s.strong,{children:"D"})," dans la file de priorit\xe9 des sommets \xe0 visiter (",(0,r.jsx)(s.strong,{children:"C"})," est d\xe9j\xe0 dans la file)."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"A"}),(0,r.jsx)(s.th,{children:"B"}),(0,r.jsx)(s.th,{children:"C"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"E"}),(0,r.jsx)(s.th,{children:"Sommets \xe0 visiter"}),(0,r.jsx)(s.th,{children:"Sommets visit\xe9s"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1(A)"}),(0,r.jsx)(s.td,{children:"2(B)"}),(0,r.jsx)(s.td,{children:"3(B)"}),(0,r.jsx)(s.td,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{mathvariant:"normal",children:"\u221e"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\infty"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord",children:"\u221e"})]})})]})}),(0,r.jsx)(s.td,{children:"[C, D]"}),(0,r.jsx)(s.td,{children:"[A, B]"})]})})]}),"\n",(0,r.jsxs)(s.p,{children:["Voil\xe0 l'\xe9tape suivante en consid\xe9rant ",(0,r.jsx)(s.strong,{children:"C"}),". ",(0,r.jsx)(s.strong,{children:"C"})," a comme sommets adjacents ",(0,r.jsx)(s.strong,{children:"E"}),". La distance de ",(0,r.jsx)(s.strong,{children:"E"})," est la distance de ",(0,r.jsx)(s.strong,{children:"C"})," plus le poids de l'ar\xeate entre ",(0,r.jsx)(s.strong,{children:"C"})," et ",(0,r.jsx)(s.strong,{children:"E"}),". On ajoute ensuite ",(0,r.jsx)(s.strong,{children:"E"})," dans la file de priorit\xe9 des sommets \xe0 visiter."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"A"}),(0,r.jsx)(s.th,{children:"B"}),(0,r.jsx)(s.th,{children:"C"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"E"}),(0,r.jsx)(s.th,{children:"Sommets \xe0 visiter"}),(0,r.jsx)(s.th,{children:"Sommets visit\xe9s"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1(A)"}),(0,r.jsx)(s.td,{children:"2(B)"}),(0,r.jsx)(s.td,{children:"3(B)"}),(0,r.jsx)(s.td,{children:"3(C)"}),(0,r.jsx)(s.td,{children:"[D, E]"}),(0,r.jsx)(s.td,{children:"[A, B, C]"})]})})]}),"\n",(0,r.jsxs)(s.p,{children:["On continue en retirant le sommet ",(0,r.jsx)(s.strong,{children:"D"}),". Il a comme sommets adjacents ",(0,r.jsx)(s.strong,{children:"E"}),". La distance de ",(0,r.jsx)(s.strong,{children:"E"})," est la distance de ",(0,r.jsx)(s.strong,{children:"D"})," plus le poids de l'ar\xeate entre ",(0,r.jsx)(s.strong,{children:"D"})," et ",(0,r.jsx)(s.strong,{children:"E"}),". Or la distance actuelle de ",(0,r.jsx)(s.strong,{children:"E"})," (venant de ",(0,r.jsx)(s.strong,{children:"C"}),") est plus petite. On ne met donc pas \xe0 jour la distance de ",(0,r.jsx)(s.strong,{children:"E"}),". ",(0,r.jsx)(s.strong,{children:"E"})," est d\xe9j\xe0 dans la file de priorit\xe9 des sommets \xe0 visiter. On ne fait donc rien."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"A"}),(0,r.jsx)(s.th,{children:"B"}),(0,r.jsx)(s.th,{children:"C"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"E"}),(0,r.jsx)(s.th,{children:"Sommets \xe0 visiter"}),(0,r.jsx)(s.th,{children:"Sommets visit\xe9s"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"0"}),(0,r.jsx)(s.td,{children:"1(A)"}),(0,r.jsx)(s.td,{children:"2(B)"}),(0,r.jsx)(s.td,{children:"3(B)"}),(0,r.jsx)(s.td,{children:"3(C)"}),(0,r.jsx)(s.td,{children:"[E]"}),(0,r.jsx)(s.td,{children:"[A, B, C, D]"})]})})]}),"\n",(0,r.jsxs)(s.p,{children:["Enfin on retire le sommet ",(0,r.jsx)(s.strong,{children:"E"}),". Il n'a pas de sommets adjacents. On ne fait donc rien."]}),"\n",(0,r.jsxs)(s.p,{children:["On a fini de parcourir le graphe. On a donc trouv\xe9 les distances de tous les sommets depuis le sommet de d\xe9part ",(0,r.jsx)(s.strong,{children:"A"}),". Si l'on souhaite trouver le plus court chemin entre ",(0,r.jsx)(s.strong,{children:"A"})," et ",(0,r.jsx)(s.strong,{children:"E"}),", il suffit de remonter le chemin en partant de E et en remontant les sommets pr\xe9c\xe9dents jusqu'\xe0 ",(0,r.jsx)(s.strong,{children:"A"}),". Le plus court chemin entre ",(0,r.jsx)(s.strong,{children:"A"})," et ",(0,r.jsx)(s.strong,{children:"E"})," est donc ",(0,r.jsx)(s.strong,{children:"A"})," ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mo,{children:"\u2192"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.3669em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"\u2192"})]})})]})," ",(0,r.jsx)(s.strong,{children:"B"})," ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mo,{children:"\u2192"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.3669em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"\u2192"})]})})]})," ",(0,r.jsx)(s.strong,{children:"C"})," ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mo,{children:"\u2192"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\rightarrow"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.3669em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"\u2192"})]})})]})," ",(0,r.jsx)(s.strong,{children:"E"}),"."]}),"\n",(0,r.jsxs)(s.admonition,{type:"tip",children:[(0,r.jsx)(s.p,{children:"En pratique pour pouvoir remonter le chemin, il faut stocker pour chaque sommet la distance la plus courte depuis le sommet de d\xe9part mais aussi le sommet pr\xe9c\xe9dent (d'o\xf9 l'on vient pour obtenir cette distance). On peut stocker cela dans une liste de paires (distance, sommet pr\xe9c\xe9dent)."}),(0,r.jsx)(s.p,{children:"On peut aussi stocker si un sommet a d\xe9j\xe0 \xe9t\xe9 visit\xe9 ou non dans une liste de bool\xe9ens de la taille du nombre de sommets plut\xf4t que dans une liste de sommets visit\xe9s."})]}),"\n",(0,r.jsx)(s.h3,{id:"pour-aller-plus-loin-a",children:"Pour aller plus loin: A*"}),"\n",(0,r.jsxs)(s.p,{children:["L'algorithme de Dijkstra peut \xeatre am\xe9lior\xe9. En effet, il explore tous les sommets adjacents d'un sommet avant de passer au sommet suivant. Cela peut \xeatre tr\xe8s co\xfbteux en temps si le graphe est tr\xe8s grand et ou si le sommet de d\xe9part et le sommet d'arriv\xe9e sont tr\xe8s \xe9loign\xe9s. L'algorithme de ",(0,r.jsx)(s.strong,{children:"Dijkstra"})," explore alors beaucoup de sommets inutilement."]}),"\n",(0,r.jsxs)(s.p,{children:["L'algorithme A* est une am\xe9lioration de l'algorithme de ",(0,r.jsx)(s.strong,{children:"Dijkstra"}),". Il utilise une ",(0,r.jsx)(s.strong,{children:"heuristique"})," pour guider la recherche. L'",(0,r.jsx)(s.strong,{children:"heuristique"})," est une fonction qui permet d'",(0,r.jsx)(s.strong,{children:"estimer"})," la distance entre un sommet et le sommet d'arriv\xe9e. L'algorithme ",(0,r.jsx)(s.strong,{children:"A"}),"* explore alors en priorit\xe9 les sommets qui sont les plus proches(selon cette estimation) du sommet d'arriv\xe9e. Cela permet de r\xe9duire le nombre de sommets explor\xe9s et donc de gagner du temps."]}),"\n",(0,r.jsxs)(s.p,{children:["Pour donner un exemple concret, on peut utiliser la ",(0,r.jsx)(s.strong,{children:"distance euclidienne"})," comme ",(0,r.jsx)(s.strong,{children:"heuristique"}),". La ",(0,r.jsx)(s.strong,{children:"distance euclidienne"})," est la distance \xe0 vol d'oiseau entre deux points. On peut l'utiliser pour guider la recherche dans un labyrinthe par exemple. On peut alors utiliser la ",(0,r.jsx)(s.strong,{children:"distance euclidienne"})," entre le sommet actuel et le sommet d'arriv\xe9e comme heuristique. Cela permet d'explorer en priorit\xe9 les sommets qui sont les plus proches (\xe0 vol d'oiseau) du sommet d'arriv\xe9e."]}),"\n",(0,r.jsx)(s.h2,{id:"simplification-2d",children:"Simplification 2D"}),"\n",(0,r.jsxs)(s.p,{children:["La repr\xe9sentation en liste d'adjacence est tr\xe8s pratique pour repr\xe9senter un graphe arbitraire. Cependant, dans certains cas, on peut utiliser une repr\xe9sentation plus simple. C'est le cas par exemple quand on cherche le plus court chemin entre deux points dans une ",(0,r.jsx)(s.strong,{children:"grille"}),". Dans ce cas les sommets sont les centres des cases de la grille et les ar\xeates sont les c\xf4t\xe9s des cases de la grille. Il n'est alors pas n\xe9cessaire de stocker la repr\xe9sentation compl\xe8te du graphe car celle-ci est connue \xe0 l'avance. On peut donc utiliser une repr\xe9sentation plus simple."]}),"\n",(0,r.jsxs)(s.p,{children:["Dans le cas o\xf9 le coup de d\xe9placement d'une case \xe0 une autre est le m\xeame pour toutes les cases, appliquer ",(0,r.jsx)(s.strong,{children:"Dijkstra"})," sur une grille devient alors tr\xe8s simple. Il suffit de ",(0,r.jsx)(s.strong,{children:"parcourir"})," la grille ",(0,r.jsx)(s.strong,{children:"en largeur"})," en partant du point de d\xe9part et en s'arr\xeatant quand on a trouv\xe9 le point d'arriv\xe9e. On peut alors remonter le chemin en partant du point d'arriv\xe9e et en remontant les points pr\xe9c\xe9dents jusqu'au point de d\xe9part (parfois aussi nomm\xe9 ",(0,r.jsx)(s.strong,{children:"Breadth First Search"})," ou ",(0,r.jsx)(s.strong,{children:"BFS"}),")."]}),"\n",(0,r.jsx)(s.h2,{id:"r\xe9sum\xe9",children:"R\xe9sum\xe9"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Un ",(0,r.jsx)(s.strong,{children:"graphe"})," est un ",(0,r.jsx)(s.strong,{children:"ensemble"})," de ",(0,r.jsx)(s.strong,{children:"sommets"})," reli\xe9s par des ",(0,r.jsx)(s.strong,{children:"ar\xeates"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Un graphe est dit ",(0,r.jsx)(s.strong,{children:"orient\xe9"})," si les ",(0,r.jsx)(s.strong,{children:"ar\xeates ont un sens"}),". Dans ce cas, on parle d'arc."]}),"\n",(0,r.jsxs)(s.li,{children:["Un graphe est dit ",(0,r.jsx)(s.strong,{children:"pond\xe9r\xe9"})," si les ",(0,r.jsx)(s.strong,{children:"ar\xeates ont un poids"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Un graphe est dit ",(0,r.jsx)(s.strong,{children:"connexe"})," si ",(0,r.jsx)(s.strong,{children:"tous les sommets sont reli\xe9s entre eux"})," par une ar\xeate ou une suite d'ar\xeates."]}),"\n",(0,r.jsxs)(s.li,{children:["Un arbre est un graphe(Un graphe ",(0,r.jsx)(s.strong,{children:"non orient\xe9"}),", ",(0,r.jsx)(s.strong,{children:"non pond\xe9r\xe9"}),", ",(0,r.jsx)(s.strong,{children:"connexe"})," et ",(0,r.jsx)(s.strong,{children:"acyclique"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:["Il existe deux mani\xe8res de repr\xe9senter un graphe en m\xe9moire : la ",(0,r.jsx)(s.strong,{children:"matrice d'adjacence"})," et la ",(0,r.jsx)(s.strong,{children:"liste d'adjacence"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Il existe deux mani\xe8res de parcourir un graphe : en ",(0,r.jsx)(s.strong,{children:"largeur"})," et en ",(0,r.jsx)(s.strong,{children:"profondeur"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["L'algorithme de ",(0,r.jsx)(s.strong,{children:"Dijkstra"})," permet de trouver les distances les plus courtes entre un sommet de d\xe9part et tous les autres sommets d'un graphe ",(0,r.jsx)(s.strong,{children:"pond\xe9r\xe9 positivement"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["L'algorithme A* est une am\xe9lioration de l'algorithme de ",(0,r.jsx)(s.strong,{children:"Dijkstra"})," qui utilise une ",(0,r.jsx)(s.strong,{children:"heuristique"})," pour guider la recherche."]}),"\n",(0,r.jsxs)(s.li,{children:["Dans le cas d'un graphe non ",(0,r.jsx)(s.strong,{children:"pond\xe9r\xe9"}),", ",(0,r.jsx)(s.strong,{children:"Dijkstra"})," n'est rien d'autre qu'un ",(0,r.jsx)(s.strong,{children:"parcours en largeur"}),"."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"sources",children:"Sources"}),"\n",(0,r.jsx)(s.p,{children:"Voil\xe0 quelques sources qui peuvent vous aider \xe0 approfondir le sujet et mieux comprendre les graphes et la recherche de chemin :"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://www.redblobgames.com/pathfinding/a-star/introduction.html",children:"https://www.redblobgames.com/pathfinding/a-star/introduction.html"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://www.youtube.com/watch?v=GazC3A4OQTE",children:"https://www.youtube.com/watch?v=GazC3A4OQTE"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://www.youtube.com/watch?v=i3_V90yUfcA",children:"https://www.youtube.com/watch?v=i3_V90yUfcA"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://www.youtube.com/watch?v=-L-WgKMFuhE",children:"https://www.youtube.com/watch?v=-L-WgKMFuhE"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>l,a:()=>a});var r=n(7294);const t={},i=r.createContext(t);function a(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);