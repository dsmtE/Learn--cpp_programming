"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[7472],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,k=c["".concat(o,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(k,s(s({ref:t},p),{},{components:n})):r.createElement(k,s({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:a,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3454:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={title:"TD3 - Conditions",sidebar_position:3},s=void 0,l={unversionedId:"TDs/S1/Conditions",id:"TDs/S1/Conditions",title:"TD3 - Conditions",description:"Exercice 1 (Positif ou n\xe9gatif)",source:"@site/content/TDs/S1/03_Conditions.md",sourceDirName:"TDs/S1",slug:"/TDs/S1/Conditions",permalink:"/Learn--cpp_programming/TDs/S1/Conditions",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"TD3 - Conditions",sidebar_position:3},sidebar:"TDs",previous:{title:"TD2 - Variables",permalink:"/Learn--cpp_programming/TDs/S1/Variables"},next:{title:"TD4 - Boucles",permalink:"/Learn--cpp_programming/TDs/S1/Loops"}},o={},u=[{value:"Exercice 1 (Positif ou n\xe9gatif)",id:"exercice-1-positif-ou-n\xe9gatif",level:2},{value:"Exercice 2 (Pair ou impair)",id:"exercice-2-pair-ou-impair",level:2},{value:"Exercice 3",id:"exercice-3",level:2},{value:"Exercice 4 (Soldes)",id:"exercice-4-soldes",level:2},{value:"Exercice 5",id:"exercice-5",level:2},{value:"Exercice 6",id:"exercice-6",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"exercice-1-positif-ou-n\xe9gatif"},"Exercice 1 (Positif ou n\xe9gatif)"),(0,a.kt)("p",null,"\xc9crire un programme qui demande \xe0 l\u2019utilisateur de saisir un entier et a\ufb00iche si cet entier est positif ou n\xe9gatif."),(0,a.kt)("p",null,"Exemples d\u2019ex\xe9cution:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Saisir un entier : 42\n42 est positif\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Saisir un entier : -5\n-5 est n\xe9gatif\n")),(0,a.kt)("h2",{id:"exercice-2-pair-ou-impair"},"Exercice 2 (Pair ou impair)"),(0,a.kt)("p",null,"\xc9crire un programme qui demande \xe0 l\u2019utilisateur de saisir un entier et a\ufb00iche si cet entier est ",(0,a.kt)("strong",{parentName:"p"},"pair")," ou ",(0,a.kt)("strong",{parentName:"p"},"impair"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Vous pouvez utiliser l'op\xe9rateur modulo ",(0,a.kt)("inlineCode",{parentName:"p"},"%")," qui donne le reste de la division enti\xe8re.")),(0,a.kt)("h2",{id:"exercice-3"},"Exercice 3"),(0,a.kt)("p",null,"\xc9crire un programme qui demande \xe0 l\u2019utilisateur de saisir son ",(0,a.kt)("strong",{parentName:"p"},"\xe2ge")," (un nombre entier) et a\ufb00iche s\u2019il est ",(0,a.kt)("strong",{parentName:"p"},"majeur")," ou ",(0,a.kt)("strong",{parentName:"p"},"mineur"),"."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"G\xe9rer la saisie d'un \xe2ge \xe0 stocker dans une variable."),(0,a.kt)("li",{parentName:"ol"},"G\xe9rer le cas o\xf9 l\u2019utilisateur saisit un ",(0,a.kt)("strong",{parentName:"li"},"\xe2ge n\xe9gatif")," et afficher un message d\u2019erreur dans ce cas."),(0,a.kt)("li",{parentName:"ol"},"G\xe9rer le cas o\xf9 l\u2019utilisateur saisit un ",(0,a.kt)("strong",{parentName:"li"},"\xe2ge avec des lettres")," et afficher et g\xe9rer l\u2019erreur.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"std::cin >> x")," renvoie ",(0,a.kt)("strong",{parentName:"p"},"true")," si tout est correct ou ",(0,a.kt)("strong",{parentName:"p"},"false")," si on a rencontr\xe9 une erreur lors de la saisie.\nDans notre cas, si l'utilisateur saisit un \xe2ge avec des lettres, la saisie \xe9choue et la variable \xe2ge n'est pas modifi\xe9e."),(0,a.kt)("p",{parentName:"admonition"},"Il est aussi possible de tester si la saisie pr\xe9c\xe9dente a \xe9chou\xe9 avec ",(0,a.kt)("inlineCode",{parentName:"p"},"std::cin.fail()")," qui renvoie ",(0,a.kt)("strong",{parentName:"p"},"true")," si la saisie a \xe9chou\xe9 et ",(0,a.kt)("strong",{parentName:"p"},"false")," sinon."),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"std::cin.fail()")," \xe9quivaut \xe0 ",(0,a.kt)("inlineCode",{parentName:"p"},"!(std::cin >> x)"),"."),(0,a.kt)("p",{parentName:"admonition"},"Dans le cas o\xf9 la saisie a \xe9chou\xe9, il faut r\xe9initialiser la saisie de l'utilisateur pour pouvoir saisir \xe0 nouveau un \xe2ge."),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"std::cin.clear()")," restaure std::cin \xe0 un \xe9tat fonctionnel, sans erreur.\n",(0,a.kt)("inlineCode",{parentName:"p"},"std::cin.ignore()")," permet d\u2019ignorer un nombre d\xe9fini de caract\xe8res, soit jusqu\u2019\xe0 un nombre maximum (exemple 500), soit jusqu\u2019\xe0 un caract\xe8re pr\xe9cis (exemple '\\n' ou 'a'). Dans notre cas, nous allons utiliser ceci\u202fpour r\xe9initialiser la saisie de l'utilisateur si on a rencontr\xe9 une erreur."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::cin.clear(); // On remet std::cin dans un \xe9tat fonctionnel.\nstd::cin.ignore(255, '\\n'); // On vide les caract\xe8res m\xe9moris\xe9s.\n"))),(0,a.kt)("h2",{id:"exercice-4-soldes"},"Exercice 4 (Soldes)"),(0,a.kt)("p",null,"C'est les soldes !"),(0,a.kt)("p",null,"Cr\xe9er un programme qui demande \xe0 l'utilisateur:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"le type de produit (\xe0 stocker dans un ",(0,a.kt)("strong",{parentName:"li"},"enum"),")"),(0,a.kt)("li",{parentName:"ul"},"le prix du produit (un nombre flottant)"),(0,a.kt)("li",{parentName:"ul"},"s'il a une carte de fid\xe9lit\xe9 (boolean)"),(0,a.kt)("li",{parentName:"ul"},"son age (un nombre entier)")),(0,a.kt)("p",null,"En fonction des informations saisies, le programme affiche le ",(0,a.kt)("strong",{parentName:"p"},"prix final")," apr\xe8s r\xe9duction."),(0,a.kt)("p",null,"Vous disposez des informations suivantes:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type d'article"),(0,a.kt)("th",{parentName:"tr",align:null},"R\xe9duction"),(0,a.kt)("th",{parentName:"tr",align:null},"R\xe9duction avec carte de fid\xe9lit\xe9"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Alimentation"),(0,a.kt)("td",{parentName:"tr",align:null},"5%"),(0,a.kt)("td",{parentName:"tr",align:null},"8%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"V\xeatements"),(0,a.kt)("td",{parentName:"tr",align:null},"10%"),(0,a.kt)("td",{parentName:"tr",align:null},"15%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Chaussures"),(0,a.kt)("td",{parentName:"tr",align:null},"12%"),(0,a.kt)("td",{parentName:"tr",align:null},"18%")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Autre"),(0,a.kt)("td",{parentName:"tr",align:null},"0%"),(0,a.kt)("td",{parentName:"tr",align:null},"0%")))),(0,a.kt)("p",null,"S'il \xe0 moins de ",(0,a.kt)("strong",{parentName:"p"},"26")," ans, il a ",(0,a.kt)("strong",{parentName:"p"},"10%")," de r\xe9duction suppl\xe9mentaire sur tous les articles apr\xe8s r\xe9duction."),(0,a.kt)("p",null,"Je vous fourni le code suivant pour l'\xe9num\xe9ration et la gestion de la saisie de l'utilisateur:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'enum class Article { Alimentation, Vetements, Chaussures, Autre };\n\n// C\'est un m\xe9canisme avanc\xe9, vous n\'avez pas besoin de comprendre comment \xe7a marche.\n// On en reparlera au second semestre.\n// retenez juste que \xe7a permet de convertir une entr\xe9e de l\'utilisateur en Article.\nstd::istream& operator>>(std::istream& is, Article& article)\n{\n    std::string articleAsString;\n    is >> articleAsString;\n\n    if (articleAsString == "Alimentation") {\n        article = Article::Alimentation;\n    } else if (articleAsString == "Vetements") {\n        article = Article::Vetements;\n    } else if (articleAsString == "Chaussures") {\n        article = Article::Chaussures;\n    } else if (articleAsString == "Autre") {\n        article = Article::Autre;\n    } else {\n        is.setstate(std::ios::failbit);\n    }\n\n    return is;\n}\n')),(0,a.kt)("p",null,"Cela nous permet d'utiliser l'op\xe9rateur ",(0,a.kt)("inlineCode",{parentName:"p"},">>")," pour lire un ",(0,a.kt)("strong",{parentName:"p"},"enum")," comme on pourrait le faire avec un ",(0,a.kt)("strong",{parentName:"p"},"int")," ou un ",(0,a.kt)("strong",{parentName:"p"},"float"),".\nSans cela, on aurait du utiliser une variable interm\xe9diaire de type ",(0,a.kt)("strong",{parentName:"p"},"string")," ou ",(0,a.kt)("strong",{parentName:"p"},"int")," pour stocker la saisie de l'utilisateur et faire la conversion nous m\xeame."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Exemple de saisie d'un enum"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nenum class Article { Alimentation, Vetements, Chaussures, Autre };\n\nstd::istream& operator>>(std::istream& is, Article& article)\n{\n    std::string articleAsString;\n    is >> articleAsString;\n\n    if (articleAsString == "Alimentation") {\n        article = Article::Alimentation;\n    } else if (articleAsString == "Vetements") {\n        article = Article::Vetements;\n    } else if (articleAsString == "Chaussures") {\n        article = Article::Chaussures;\n    } else if (articleAsString == "Autre") {\n        article = Article::Autre;\n    } else {\n        is.setstate(std::ios::failbit);\n    }\n\n    return is;\n}\n\nint main()\n{\n    Article article;\n    std::cin >> article;\n\n    // On v\xe9rifie si la saisie a \xe9chou\xe9.\n    if (std::cin.fail()) {\n        std::cout << "Erreur de saisie, il faut saisir un type d\'article valide (\\"Alimentation\\", \\"Vetements\\", \\"Chaussures\\" ou \\"Autre\\")" << std::endl;\n\n        std::cin.clear(); // On remet std::cin dans un \xe9tat fonctionnel.\n        std::cin.ignore(255, \'\\n\'); // On vide les caract\xe8res m\xe9moris\xe9s.\n\n        // le programme s\'arr\xeate si on a rencontr\xe9 une erreur de saisie et renvoie 1 pour indiquer une erreur.\n        return 1;\n    }\n\n    if (article == Article::Alimentation) {\n        std::cout << "Vous avez saisi un article de type Alimentation" << std::endl;\n    } else if (article == Article::Vetements) {\n        std::cout << "Vous avez saisi un article de type Vetements" << std::endl;\n    } else if (article == Article::Chaussures) {\n        std::cout << "Vous avez saisi un article de type Chaussures" << std::endl;\n    } else if (article == Article::Autre) {\n        std::cout << "Vous avez saisi un article de type Autre" << std::endl;\n    }\n\n    return 0;\n}\n'))),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Demander \xe0 l'utilisateur de saisir le type d'article, le prix, s'il a une carte de fid\xe9lit\xe9 et son \xe2ge.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"G\xe9rer les cas o\xf9 l'utilisateur saisit des informations incorrectes (enum incorrect, prix ou \xe2ge n\xe9gatif, etc.) et afficher un message d'erreur dans ce cas.\nVous pouvez reprendre mon exemple de saisie d'un enum.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Calculer le prix final en fonction des informations saisies et afficher le r\xe9sultat.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"L'enseigne offre \xe9galement un bon d'achat de ",(0,a.kt)("strong",{parentName:"p"},"10%")," du montant total du ticket de caisse, \xe0 valoir sur un prochain achat. Le bon d'achat ne peut pas \xeatre sup\xe9rieur \xe0 30\u20ac.\nCalculer le montant du bon d'achat et l'afficher en fin de programme."))),(0,a.kt)("h2",{id:"exercice-5"},"Exercice 5"),(0,a.kt)("p",null,"Calcul du temps d'\xe9bullition de l'eau en fonction de l'",(0,a.kt)("strong",{parentName:"p"},"altitude")," en m\xe8tres (un nombre entier), de la ",(0,a.kt)("strong",{parentName:"p"},"temp\xe9rature ambiante")," (un nombre flottant) et de l'ajout ou non de ",(0,a.kt)("strong",{parentName:"p"},"sel")," (boolean)."),(0,a.kt)("p",null,"Vous disposez des informations suivantes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A ",(0,a.kt)("strong",{parentName:"li"},"0")," m\xe8tre d'altitude, l'eau bout \xe0 ",(0,a.kt)("strong",{parentName:"li"},"100\xb0C"),"."),(0,a.kt)("li",{parentName:"ul"},"Tout les ",(0,a.kt)("strong",{parentName:"li"},"300 m\xe8tres")," d'altitude suppl\xe9mentaires, l'eau atteint son point d'\xe9bullition ",(0,a.kt)("strong",{parentName:"li"},"1\xb0C plus bas"),"."),(0,a.kt)("li",{parentName:"ul"},"L'action d'ajouter du ",(0,a.kt)("strong",{parentName:"li"},"sel")," dans l'eau fait augmenter son point d'\xe9bullition de ",(0,a.kt)("strong",{parentName:"li"},"1.5\xb0C"),"."),(0,a.kt)("li",{parentName:"ul"},"Il faut ",(0,a.kt)("strong",{parentName:"li"},"1 min")," pour que l'eau gagne ",(0,a.kt)("strong",{parentName:"li"},"10\xb0C")," de temp\xe9rature."),(0,a.kt)("li",{parentName:"ul"},"La temp\xe9rature de l'eau initiale est la temp\xe9rature ambiante.")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Demander \xe0 l'utilisateur de saisir l'altitude, la temp\xe9rature ambiante et s'il ajoute du sel."),(0,a.kt)("li",{parentName:"ol"},"G\xe9rer le cas o\xf9 l'utilisateur saisit une altitude n\xe9gative et afficher un message d'erreur."),(0,a.kt)("li",{parentName:"ol"},"En fonction des informations saisies, afficher le temps d'\xe9bullition de l'eau en minutes.")),(0,a.kt)("h2",{id:"exercice-6"},"Exercice 6"),(0,a.kt)("p",null,"Essayer de refaire les exercices ",(0,a.kt)("strong",{parentName:"p"},"1")," et ",(0,a.kt)("strong",{parentName:"p"},"2")," en utilisant des ",(0,a.kt)("strong",{parentName:"p"},"ternaires"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Un ",(0,a.kt)("strong",{parentName:"p"},"ternaire")," est une expression conditionnelle qui permet de faire un test comme un ",(0,a.kt)("strong",{parentName:"p"},"if/else")," et de retourner une valeur en fonction du r\xe9sultat du test."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int a {5};\nint b {10};\n// condition ? valeur si vrai : valeur si faux\nint c {(a > b) ? a : b }; // c = 10\n")),(0,a.kt)("p",{parentName:"admonition"},"C'est r\xe9serv\xe9 aux cas simples qui peuvent s'\xe9crire sur une seule ligne.\nIl ne faut pas abuser des ternaires car cela peut rendre le code illisible.")))}m.isMDXComponent=!0}}]);