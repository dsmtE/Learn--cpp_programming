"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[3834],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(n),c=i,f=u["".concat(l,".").concat(c)]||u[c]||m[c]||a;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:i,o[1]=p;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4647:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={title:"TD8 - Headers",sidebar_position:8},o=void 0,p={unversionedId:"TDs/S1/headers",id:"TDs/S1/headers",title:"TD8 - Headers",description:"Exercice 1 (Fraction)",source:"@site/content/TDs/S1/08_headers.md",sourceDirName:"TDs/S1",slug:"/TDs/S1/headers",permalink:"/Learn--cpp_programming/TDs/S1/headers",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"TD8 - Headers",sidebar_position:8},sidebar:"TDs",previous:{title:"TD7 - Structures",permalink:"/Learn--cpp_programming/TDs/S1/Struct"},next:{title:"TD9 - M\xe9moire",permalink:"/Learn--cpp_programming/TDs/S1/MemoryAllocation"}},l={},s=[{value:"Exercice 1 (Fraction)",id:"exercice-1-fraction",level:2}],d={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"exercice-1-fraction"},"Exercice 1 (Fraction)"),(0,i.kt)("p",null,"Le but de cet exercice est de cr\xe9er une ",(0,i.kt)("strong",{parentName:"p"},"structure")," permettant de repr\xe9senter une ",(0,i.kt)("strong",{parentName:"p"},"fraction"),". Cette structure devra contenir deux entiers positifs, un pour le ",(0,i.kt)("strong",{parentName:"p"},"num\xe9rateur")," et un pour le ",(0,i.kt)("strong",{parentName:"p"},"d\xe9nominateur"),"."),(0,i.kt)("p",null,"On va utiliser un fichier d'en-t\xeate pour d\xe9finir la structure et les fonctions qui vont permettre de manipuler les fractions."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Cr\xe9er un fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"fraction.hpp")," qui contiendra la d\xe9finition de la structure et les prototypes des m\xe9thodes.\nLa structure devra s'appeler ",(0,i.kt)("inlineCode",{parentName:"p"},"Fraction")," et contenir deux ",(0,i.kt)("strong",{parentName:"p"},"entiers positifs")," nomm\xe9s ",(0,i.kt)("inlineCode",{parentName:"p"},"numerator")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"denominator")," de type ",(0,i.kt)("inlineCode",{parentName:"p"},"unsigned int")," avec comme valeur par d\xe9faut ",(0,i.kt)("inlineCode",{parentName:"p"},"0/1"),".\nLa structure devra contenir une ",(0,i.kt)("strong",{parentName:"p"},"m\xe9thode")," ",(0,i.kt)("inlineCode",{parentName:"p"},"display")," et qui permet d'afficher (",(0,i.kt)("inlineCode",{parentName:"p"},"std::cout"),") la fraction sous la forme ",(0,i.kt)("inlineCode",{parentName:"p"},"numerator/denominator"),"."),(0,i.kt)("p",{parentName:"li"},"Vous devrez \xe9galement d\xe9finir les ",(0,i.kt)("strong",{parentName:"p"},"prototypes")," des fonctions suivantes :"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"add")," : prend deux fractions en param\xe8tre et retourne la somme des deux fractions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sub")," : prend deux fractions en param\xe8tre et retourne la diff\xe9rence des deux fractions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mul")," : prend deux fractions en param\xe8tre et retourne le produit des deux fractions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"div")," : prend deux fractions en param\xe8tre et retourne le quotient des deux fractions.")))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Pour simplifier on va consid\xe9rer que les fractions sont toujours positives et on ne va pas g\xe9rer le cas ou le r\xe9sultat d'une op\xe9ration est n\xe9gatif ou le probl\xe8me de division par z\xe9ro.\nVous \xeates toute fois libre de g\xe9rer ces cas si vous le souhaitez (et donc changer le type des attributs de la structure et utiliser des entiers sign\xe9s).")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Petit rappel sur la d\xe9finition des prototypes de m\xe9thodes pour les structures ",(0,i.kt)("a",{parentName:"p",href:"https://dsmte.github.io/Learn--cpp_programming/Lessons/S1/Struct#prototype-de-m%C3%A9thodes"},"ici"),".")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Cr\xe9er un fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"fraction.cpp")," qui contiendra les d\xe9finitions des m\xe9thodes et fonctions.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Impl\xe9menter les fonctions dans le fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"fraction.cpp"),"."))),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Les fonctions ",(0,i.kt)("inlineCode",{parentName:"p"},"add"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"mul")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"div")," ne doivent pas modifier les fractions pass\xe9es en param\xe8tre mais bien retourner une nouvelle fraction qui est le r\xe9sultat de l'op\xe9ration.")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Cr\xe9er un fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"utils.hpp")," qui contiendra les ",(0,i.kt)("strong",{parentName:"p"},"fonctions")," suivantes :"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gcd")," : prend deux entiers positifs en param\xe8tre et retourne le plus grand diviseur commun."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"simplify")," : prend une fraction en param\xe8tre et retourne la fraction simplifi\xe9e."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Cr\xe9er un fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"utils.cpp")," et impl\xe9menter les fonctions."))),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Pour simplifier une fraction, il faut diviser le num\xe9rateur et le d\xe9nominateur par le plus grand diviseur commun.\nOn va donc utiliser la fonction ",(0,i.kt)("inlineCode",{parentName:"p"},"gcd")," pour calculer le plus grand diviseur commun et ensuite diviser le ",(0,i.kt)("strong",{parentName:"p"},"num\xe9rateur")," et le ",(0,i.kt)("strong",{parentName:"p"},"d\xe9nominateur")," par ce nombre."),(0,i.kt)("p",{parentName:"admonition"},"la fraction ",(0,i.kt)("inlineCode",{parentName:"p"},"4/6")," devient ",(0,i.kt)("inlineCode",{parentName:"p"},"2/3")," car ",(0,i.kt)("inlineCode",{parentName:"p"},"gcd(4, 6) = 2")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"4/2 = 2")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"6/2 = 3"),"."),(0,i.kt)("p",{parentName:"admonition"},"Il faut importer le fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"fraction.hpp")," dans le fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"utils.hpp")," pour pouvoir utiliser la structure ",(0,i.kt)("inlineCode",{parentName:"p"},"Fraction")," dans la fonction ",(0,i.kt)("inlineCode",{parentName:"p"},"simplify"),".")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Pour trouver le plus grand diviseur commun, on peut utiliser l'algorithme d'",(0,i.kt)("strong",{parentName:"p"},"Euclide")," qui consiste \xe0 diviser le plus grand nombre par le plus petit et \xe0 r\xe9p\xe9ter l'op\xe9ration avec le reste de la division jusqu'\xe0 obtenir un reste nul. Dans ce cas, le plus petit nombre non nul est le plus grand diviseur commun."),(0,i.kt)("p",{parentName:"admonition"},"exemple avec ",(0,i.kt)("inlineCode",{parentName:"p"},"22")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"8"),":"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"22 % 8 = 6")," (reste de la division de ",(0,i.kt)("inlineCode",{parentName:"li"},"22")," par ",(0,i.kt)("inlineCode",{parentName:"li"},"8"),") ",(0,i.kt)("inlineCode",{parentName:"li"},"6")," est diff\xe9rent de ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," donc on continue"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"8 % 6 = 2")," (reste de la division de ",(0,i.kt)("inlineCode",{parentName:"li"},"8")," par ",(0,i.kt)("inlineCode",{parentName:"li"},"6"),") ",(0,i.kt)("inlineCode",{parentName:"li"},"2")," est diff\xe9rent de ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," donc on continue"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"6 % 2 = 0")," (reste de la division de ",(0,i.kt)("inlineCode",{parentName:"li"},"6")," par ",(0,i.kt)("inlineCode",{parentName:"li"},"2"),") ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," est \xe9gal \xe0 ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," donc on s'arr\xeate et le plus grand diviseur commun est ",(0,i.kt)("inlineCode",{parentName:"li"},"2"),"."))),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Modifier vos fonctions ",(0,i.kt)("inlineCode",{parentName:"p"},"add"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"mul")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"div")," pour simplifier le r\xe9sultat avant de le retourner.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Cr\xe9er un fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"main.cpp")," qui contiendra le programme principal. Ce programme devra :"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Cr\xe9er deux fractions ",(0,i.kt)("inlineCode",{parentName:"li"},"f1")," et ",(0,i.kt)("inlineCode",{parentName:"li"},"f2")," avec les valeurs de votre choix. (id\xe9alement avec des valeurs al\xe9atoires ou saisies par l'utilisateur)"),(0,i.kt)("li",{parentName:"ul"},"Afficher les deux fractions."),(0,i.kt)("li",{parentName:"ul"},"Afficher la somme des deux fractions."),(0,i.kt)("li",{parentName:"ul"},"Afficher la diff\xe9rence des deux fractions."),(0,i.kt)("li",{parentName:"ul"},"Afficher le produit des deux fractions."),(0,i.kt)("li",{parentName:"ul"},"Afficher le quotient des deux fractions.")))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Vous d\xe9couvrirez au prochain semestre comment am\xe9liorer ce programme en utilisant la surcharge d'op\xe9rateurs \ud83d\udee0\ufe0f.")))}m.isMDXComponent=!0}}]);