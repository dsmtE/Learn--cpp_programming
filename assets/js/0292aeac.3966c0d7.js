"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[6365],{69340:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var r=s(85893),o=s(11151);const i={title:"TD7 - Structures"},t=void 0,c={id:"TDs/S1/Struct",title:"TD7 - Structures",description:"Exercice 1 : d\xe9placements",source:"@site/content/TDs/S1/07_Struct.md",sourceDirName:"TDs/S1",slug:"/TDs/S1/Struct",permalink:"/Learn--cpp_programming/TDs/S1/Struct",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"TD7 - Structures"},sidebar:"TDs",previous:{title:"TD6 - D\xe9bogueur",permalink:"/Learn--cpp_programming/TDs/S1/DebuggerAndErrors"},next:{title:"TD8 - Headers",permalink:"/Learn--cpp_programming/TDs/S1/headers"}},d={},a=[{value:"Exercice 1 : d\xe9placements",id:"exercice-1--d\xe9placements",level:2},{value:"Exercice 2 : combats de Pok\xe9mons",id:"exercice-2--combats-de-pok\xe9mons",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"exercice-1--d\xe9placements",children:"Exercice 1 : d\xe9placements"}),"\n",(0,r.jsx)(n.p,{children:"Vous \xeates le pilote d'un sous-marin, vous avez re\xe7u des ordres de mouvement sous la forme d'une instruction et d'une distance \xe0 parcourir. Vous devez \xe9crire un programme qui permet de calculer la position du sous-marin apr\xe8s avoir effectu\xe9 les mouvements re\xe7us."}),"\n",(0,r.jsxs)(n.p,{children:["Votre position initiale est ",(0,r.jsx)(n.code,{children:"(0, 0)"})," et vous pouvez vous d\xe9placer dans les directions suivantes: ",(0,r.jsx)(n.code,{children:"Up"}),", ",(0,r.jsx)(n.code,{children:"Down"}),", ",(0,r.jsx)(n.code,{children:"Forward"}),", ",(0,r.jsx)(n.code,{children:"Backward"}),"."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\xc9crire une ",(0,r.jsx)(n.strong,{children:"structure"})," ",(0,r.jsx)(n.code,{children:"Position"})," qui permet de stocker les coordonn\xe9es du sous-marin."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\xc9crire un ",(0,r.jsx)(n.strong,{children:"enum"})," ",(0,r.jsx)(n.code,{children:"Direction"})," qui permet de stocker les directions possibles."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\xc9crire une ",(0,r.jsx)(n.strong,{children:"structure"})," ",(0,r.jsx)(n.code,{children:"Move"})," qui repr\xe9sente un mouvement sous la forme d'une direction et d'une distance \xe0 parcourir."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\xc9crire une fonction ",(0,r.jsx)(n.code,{children:"moveSubmarine"})," qui permet de d\xe9placer le sous-marin en fonction d'un mouvement. La fonction ne doit rien retourner et doit modifier la position du sous-marin pass\xe9e en param\xe8tre."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\xc9crire une fonction ",(0,r.jsx)(n.code,{children:"display"})," qui permet d'afficher la position du sous-marin pass\xe9e en param\xe8tre."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Le but est d'indiquer la position du sous-marin apr\xe8s avoir effectu\xe9 les mouvements suivants:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Forward 10"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Down 5"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Backward 3"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Up 2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Forward 5"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Down 1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Backward 2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Forward 3"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Down 1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Up 3"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Forward 1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Down 5"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Backward 2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"Forward 6"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Vous pouvez repr\xe9senter les mouvements sous la forme d'un vecteur de ",(0,r.jsx)(n.code,{children:"Move"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"std::vector<Move> moves = {\n    {Direction::Forward, 10},\n    {Direction::Down, 5},\n    {Direction::Backward, 3},\n    {Direction::Up, 2},\n    {Direction::Forward, 5},\n    {Direction::Down, 1},\n    {Direction::Backward, 2},\n    {Direction::Forward, 3},\n    {Direction::Down, 1},\n    {Direction::Up, 3},\n    {Direction::Forward, 1},\n    {Direction::Down, 5},\n    {Direction::Backward, 2},\n    {Direction::Forward, 6}\n};\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Exercice inspir\xe9 de de l'\xe9dition ",(0,r.jsx)(n.strong,{children:"2021"})," de l'",(0,r.jsx)(n.strong,{children:"advent of code"}),": ",(0,r.jsx)(n.a,{href:"https://adventofcode.com/2021/day/2",children:"https://adventofcode.com/2021/day/2"})]})}),"\n",(0,r.jsx)(n.h2,{id:"exercice-2--combats-de-pok\xe9mons",children:"Exercice 2 : combats de Pok\xe9mons"}),"\n",(0,r.jsx)(n.p,{children:"Un pok\xe9mon a un Nom, des Points de Vie, une Attaque et une Vitesse. Un combat entre deux Pok\xe9mons se d\xe9roule ainsi:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\xc0 chaque tour, le pok\xe9mon avec la plus grande vitesse commence (si \xe9galit\xe9, on choisit au hasard lequel de deux commence ce tour)"}),"\n",(0,r.jsx)(n.li,{children:"Le pok\xe9mon attaquant r\xe9duit les Points de Vie de l'autre d'un montant \xe9gal \xe0 son attaque. Puis, si le deuxi\xe8me pok\xe9mon n'est pas encore KO (Points de Vie encore > 0), il attaque \xe0 son tour"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Faites une structure repr\xe9sentant un Pok\xe9mon, puis \xe9crivez une fonction faisant le combat entre deux Pok\xe9mons.",(0,r.jsx)("br",{}),"\nPar exemple:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'Pokemon pokemon1{.nom = "Poke1", .points_de_vie = 50, .attaque = 10, .vitesse = 8};\nPokemon pokemon2{.nom = "Poke2", .points_de_vie = 30, .attaque = 20, .vitesse = 3};\ncombat(pokemon1, pokemon2);\n'})}),"\n",(0,r.jsx)(n.p,{children:"doit afficher :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Tour 1:\nPoke1 attaque, il reste 20 PV \xe0 Poke2.\nPoke2 attaque, il reste 30 PV \xe0 Poke1.\n\nTour 2:\nPoke1 attaque, il reste 10 PV \xe0 Poke2.\nPoke2 attaque, il reste 10 PV \xe0 Poke1.\n\nTour 3:\nPoke1 attaque, il reste 0 PV \xe0 Poke2.\nPoke2 est KO, il ne peut pas attaquer.\n\nPoke1 gagne!\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Un dresseur a un Nom et 6 pok\xe9mons. Dans un combat entre deux dresseurs, ils font combattre leurs pok\xe9mons les uns apr\xe8s les autres, jusqu'\xe0 ce que tous les pok\xe9mons d'un des dresseurs soient KOs.",(0,r.jsx)("br",{}),"\nPar exemple:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'Dresseur dresseur1{.nom = "Dresseur1", .pokemons = {\n    Pokemon{.nom = "Dresseur1_Poke1", .points_de_vie = 5, .attaque = 10, .vitesse = 8},\n    Pokemon{.nom = "Dresseur1_Poke2", .points_de_vie = 5, .attaque = 10, .vitesse = 8},\n    Pokemon{.nom = "Dresseur1_Poke3", .points_de_vie = 5, .attaque = 10, .vitesse = 8},\n    Pokemon{.nom = "Dresseur1_Poke4", .points_de_vie = 5, .attaque = 10, .vitesse = 8},\n    Pokemon{.nom = "Dresseur1_Poke5", .points_de_vie = 5, .attaque = 10, .vitesse = 8},\n    Pokemon{.nom = "Dresseur1_Poke6", .points_de_vie = 5, .attaque = 10, .vitesse = 8},\n}};\nDresseur dresseur2{.nom = "Dresseur2", .pokemons = {\n    Pokemon{.nom = "Dresseur2_Poke1", .points_de_vie = 20, .attaque = 10, .vitesse = 3},\n    Pokemon{.nom = "Dresseur2_Poke2", .points_de_vie = 20, .attaque = 10, .vitesse = 3},\n    Pokemon{.nom = "Dresseur2_Poke3", .points_de_vie = 20, .attaque = 10, .vitesse = 3},\n    Pokemon{.nom = "Dresseur2_Poke4", .points_de_vie = 20, .attaque = 10, .vitesse = 3},\n    Pokemon{.nom = "Dresseur2_Poke5", .points_de_vie = 20, .attaque = 10, .vitesse = 3},\n    Pokemon{.nom = "Dresseur2_Poke6", .points_de_vie = 20, .attaque = 10, .vitesse = 3},\n}};\ncombat(dresseur1, dresseur2);\n'})}),"\n",(0,r.jsx)(n.p,{children:"doit afficher :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Tour 1:\nDresseur1_Poke1 attaque, il reste 10 PV \xe0 Dresseur2_Poke1.\nDresseur2_Poke1 attaque, il reste 0 PV \xe0 Dresseur1_Poke1.\n\nDresseur2_Poke1 gagne!\n\nTour 2:\nDresseur1_Poke2 attaque, il reste 0 PV \xe0 Dresseur2_Poke1.\nDresseur2_Poke1 est KO, il ne peut pas attaquer.\n\nDresseur1_Poke2 gagne!\n\nTour 3:\nDresseur1_Poke2 attaque, il reste 10 PV \xe0 Dresseur2_Poke2.\nDresseur2_Poke2 attaque, il reste 0 PV \xe0 Dresseur1_Poke2.\n\nDresseur2_Poke2 gagne!\n\netc...\n\nDresseur 2 a gagn\xe9!\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>t});var r=s(67294);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);