"use strict";(self.webpackChunkprogramming_support_courses=self.webpackChunkprogramming_support_courses||[]).push([[2288],{5014:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=r(5893),t=r(1151);const i={title:"TD4 - D\xe9duction de type et biblioth\xe8que standard"},c=void 0,o={id:"TDs/S2/AutoAndAlgorithm",title:"TD4 - D\xe9duction de type et biblioth\xe8que standard",description:"Exercice 1 (Vector and Algorithm)",source:"@site/content/TDs/S2/04_AutoAndAlgorithm.md",sourceDirName:"TDs/S2",slug:"/TDs/S2/AutoAndAlgorithm",permalink:"/Learn--cpp_programming/TDs/S2/AutoAndAlgorithm",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"TD4 - D\xe9duction de type et biblioth\xe8que standard"},sidebar:"TDs",previous:{title:"TD3 - Structures de donn\xe9es",permalink:"/Learn--cpp_programming/TDs/S2/dataStructures"},next:{title:"TD5 - Hachage et tableaux associatifs",permalink:"/Learn--cpp_programming/TDs/S2/hashAndAssociativeTables"}},d={},l=[{value:"Exercice 1 (Vector and Algorithm)",id:"exercice-1-vector-and-algorithm",level:2},{value:"Exercice 2 (String)",id:"exercice-2-string",level:2},{value:"Exercice 3 (Palindrome)",id:"exercice-3-palindrome",level:2},{value:"Pour aller plus loin (lambda)",id:"pour-aller-plus-loin-lambda",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"exercice-1-vector-and-algorithm",children:"Exercice 1 (Vector and Algorithm)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Remplir un ",(0,s.jsx)(n.code,{children:"std::vector"})," avec des nombres entiers al\xe9atoires compris entre ",(0,s.jsx)(n.strong,{children:"0"})," et ",(0,s.jsx)(n.strong,{children:"100"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Utiliser les ",(0,s.jsx)(n.strong,{children:"it\xe9rateurs"})," et les m\xe9thodes ",(0,s.jsx)(n.code,{children:"begin"})," et ",(0,s.jsx)(n.code,{children:"end"})," pour afficher les valeurs du vecteur \xe0 l'aide d'une boucle ",(0,s.jsx)(n.code,{children:"for"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Chercher si un nombre saisi par l'utilisateur est pr\xe9sent dans le vecteur \xe0 l'aide de la fonction ",(0,s.jsx)(n.code,{children:"std::find"})," et afficher un message\nadapt\xe9."]}),"\n",(0,s.jsxs)(n.li,{children:["Utiliser la fonction ",(0,s.jsx)(n.code,{children:"std::count"})," pour compter le nombre d'occurrences d'un nombre entier dans le vecteur.\nVous pouvez trouver la documentation de la fonction ",(0,s.jsx)(n.code,{children:"std::count"})," ",(0,s.jsx)(n.a,{href:"https://en.cppreference.com/w/cpp/algorithm/count",children:"ici"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Utiliser la fonction ",(0,s.jsx)(n.code,{children:"std::sort"})," pour trier le vecteur."]}),"\n",(0,s.jsxs)(n.li,{children:["Utiliser la fonction ",(0,s.jsx)(n.code,{children:"std::accumulate"})," pour calculer la ",(0,s.jsx)(n.strong,{children:"somme"})," des \xe9l\xe9ments du vecteur (par d\xe9faut, la fonction ",(0,s.jsx)(n.code,{children:"std::accumulate"})," utilise l'op\xe9rateur ",(0,s.jsx)(n.code,{children:"+"})," entre les \xe9l\xe9ments)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"exercice-2-string",children:"Exercice 2 (String)"}),"\n",(0,s.jsx)(n.p,{children:"\xc9tant donn\xe9e une phrase compos\xe9e de mots s\xe9par\xe9s par des espaces."}),"\n",(0,s.jsx)(n.p,{children:"Nous avons utilis\xe9 dans le TD pr\xe9c\xe9dent une astuce avec les stream C++ qui permet de s\xe9parer les mots d'une phrase. L'id\xe9e est de coder une autre fa\xe7on d'arriver au m\xeame r\xe9sultat sans utiliser les stream."}),"\n",(0,s.jsx)(n.p,{children:"Je vous donne la fonction lambda suivante qui permet de savoir si un caract\xe8re est un espace:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"auto const is_space = [](char letter){ return letter == ' '; };\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Le mot cl\xe9 ",(0,s.jsx)(n.code,{children:"auto"}),' ici permet de "stocker" la fonction dans une variable pour la pass\xe9 en param\xe8tre. En r\xe9alit\xe9 se cache derri\xe8re des pointeur de fonction ou le type ',(0,s.jsx)(n.code,{children:"std::function"})," qui permet d'avoir une variable qui repr\xe9sente une fonction comme cela."]}),"\n",(0,s.jsxs)(n.p,{children:["Cela va permettre d'utiliser les fonctions ",(0,s.jsx)(n.code,{children:"std::find_if_not"})," et ",(0,s.jsx)(n.code,{children:"find_if"})," (qui retourne des it\xe9rateurs) pour rechercher ou non des espaces dans une cha\xeene de caract\xe8re."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\xc9crire une fonction (\xe0 l'aide des fonctions ",(0,s.jsx)(n.code,{children:"std::find"})," et ",(0,s.jsx)(n.code,{children:"std::distance"}),") qui prendre en param\xe8tre une r\xe9f\xe9rence constante sur une ",(0,s.jsx)(n.code,{children:"std::string"})," et qui retourne le nombre de lettres du premier mot de la phrase."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Vous allez avoir besoin de la fonction ",(0,s.jsx)(n.code,{children:"std::distance"}),", qui retourne la distance entre deux it\xe9rateurs, sous forme d\u2019un nombre entier."]})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\xc9crire une fonction qui permet de d\xe9couper la phrase en mots et de les stocker dans un ",(0,s.jsx)(n.code,{children:"std::vector"})," de ",(0,s.jsx)(n.code,{children:"std::string"}),".\nVoil\xe0 le prototype de la fonction :"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"std::vector<std::string> split_string(std::string const& str);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"exercice-3-palindrome",children:"Exercice 3 (Palindrome)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\xc9crire une fonction qui prend en param\xe8tre une r\xe9f\xe9rence constante sur une ",(0,s.jsx)(n.code,{children:"std::string"})," et qui retourne ",(0,s.jsx)(n.code,{children:"true"})," si la cha\xeene de caract\xe8res est un palindrome (qui peut se lire dans les deux sens), ",(0,s.jsx)(n.code,{children:"false"})," sinon."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Utiliser la fonctions ",(0,s.jsx)(n.code,{children:"std::equal"})," pour comparer les valeurs de deux it\xe9rateurs.\nUtiliser les fonctions ",(0,s.jsx)(n.code,{children:"std::begin"}),", ",(0,s.jsx)(n.code,{children:"std::end"}),"  et ",(0,s.jsx)(n.code,{children:"std::rbegin"}),", ",(0,s.jsx)(n.code,{children:"std::rend"})," pour obtenir les it\xe9rateurs de d\xe9but et de fin d'une cha\xeene de caract\xe8res et de sa version invers\xe9e."]}),"\n",(0,s.jsx)(n.h2,{id:"pour-aller-plus-loin-lambda",children:"Pour aller plus loin (lambda)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\xc9crire une fonction qui prend en param\xe8tre un ",(0,s.jsx)(n.code,{children:"std::vector"})," et retourne la ",(0,s.jsx)(n.strong,{children:"somme"})," du ",(0,s.jsx)(n.strong,{children:"carr\xe9"})," de ses \xe9l\xe9ments. Vous devez utiliser la fonction ",(0,s.jsx)(n.code,{children:"std::accumulate"})," et une fonction ",(0,s.jsx)(n.strong,{children:"lambda"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["\xc9crire une fonction qui prend en param\xe8tre un ",(0,s.jsx)(n.code,{children:"std::vector"})," et retourne le ",(0,s.jsx)(n.strong,{children:"produit"})," de ses \xe9l\xe9ments ",(0,s.jsx)(n.strong,{children:"pairs"}),". Vous ne devez pas filtrer les \xe9l\xe9ments du vecteur, mais utiliser une fonction ",(0,s.jsx)(n.strong,{children:"lambda"})," pour d\xe9terminer si un \xe9l\xe9ment est pair ou non et si oui, le prendre en compte dans le produit. Vous devez utiliser la fonction ",(0,s.jsx)(n.code,{children:"std::accumulate"})," et une fonction ",(0,s.jsx)(n.strong,{children:"lambda"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>c});var s=r(7294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);