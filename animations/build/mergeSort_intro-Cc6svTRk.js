import{w as x,O as I,P as X,D as Y,M as q,m as Q,u as v,r as D,j as p,b as B,R as k,c as S,G as E,Q as H,a as y,V as J}from"./_virtual_settings-DUdUAYR1.js";import{u as K,C as i,T as N,t as U,s as c}from"./styles-1mPC6dPo.js";import{r as F,s as _}from"./utils-B3L5ltZ6.js";X(L,Y());function*L(f,h){yield*x(f),I(h)?yield*h:h()}let W;W??(W=new q("mergeSort_intro",!1));W.loadData({version:0,timeEvents:[],seed:829095212});const Z=W,m=Q(function*(f){const h=v().variables.get("seed",42),M=v().variables.get("size",7),z=K(h()),n=D(M()).map(e=>z.nextInt(1,70)),r=Math.floor(M()/2),t=[],s=S(),u=S(),g=S(),R=28,a=16,l=128,d=R+l,C=4,G=8;f.fill(i.background),f.add(D(n.length).map(e=>p(k,{ref:B(t,e),size:l,lineWidth:G,stroke:i.surface,fill:i.background,radius:C,x:-156*(n.length-1)/2+d*e,alignItems:"center",justifyContent:"center",children:p(N,{text:n[e].toString(),...U})}))),f.add(p(H,{children:[p(k,{ref:s,stroke:i.surface,lineWidth:6,radius:8,opacity:0,width:n.length*d-R+2*a,height:l+2*a}),p(k,{ref:u,stroke:i.cyan,lineWidth:6,radius:8,opacity:0,topLeft:()=>[s().left().x-l,s().bottomRight().y+2*a],width:r*d-R+2*a,height:l+2*a,fill:new E(i.cyan).desaturate(.5).alpha(.1)}),p(k,{ref:g,stroke:i.yellow,lineWidth:6,radius:8,opacity:0,topRight:()=>[s().right().x+l,s().bottomRight().y+2*a],width:(n.length-r)*d-R+2*a,height:l+2*a,fill:new E(i.yellow).desaturate(.5).alpha(.1)})]})),yield*x(.5),yield*y(c(.1,...t.slice(0,r).map(e=>e.stroke(i.cyan,.1))),c(.1,...t.slice(r).map(e=>e.stroke(i.yellow,.1)))),yield*x(.5);const b=l/2+2*a;yield*y(s().y(s().y()-b,.3),...t.map(e=>e.y(e.y()-b,.3)),s().opacity(1,.3),L(.1,y(u().opacity(1,.3),g().opacity(1,.3))));const O=t.map(e=>e.position());yield*y(c(.3,...t.slice(0,r).map((e,o)=>e.topLeft(u().topLeft().addY(a).addX(a+d*o),.4))),c(.3,...t.slice(r).map((e,o)=>e.topLeft(g().topLeft().addY(a).addX(a+d*o),.4))));const j=t.map(e=>e.position()),w=F([..._(n.slice(0,r)),..._(n.slice(r)).map(e=>e+r)]);yield*c(.1,...w.map((e,o)=>t[o].position(j[e],.3))),yield*x(.5);const A=[...t];w.forEach((e,o)=>t[e]=A[o]);const P=[...n];w.forEach((e,o)=>n[e]=P[o]);const T=F(_(n));{const e=t.slice();T.forEach((o,V)=>t[o]=e[V])}yield*c(.2,...t.map((e,o)=>e.position(O[o],.3))),yield*x(.5),yield*y(s().y(s().y()+b,.3),...t.map(e=>e.y(e.y()+b,.3)),s().opacity(0,.3),u().opacity(0,.3),g().opacity(0,.3),...t.map(e=>e.stroke(i.surface,.3))),yield*y(u().opacity(0,.3),g().opacity(0,.3),s().opacity(0,.3)),yield*c(.1,...t.map(e=>e.fill(i.green,.3)))});m.name="mergeSort_intro";Z.attach(m.meta);m.onReplaced??(m.onReplaced=new J(m.config));export{m as d};
